{"mappings":"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","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./packages/@react-spectrum/checkbox/src/context.ts","./node_modules/@adobe/spectrum-css-temp/components/checkbox/vars.css","./packages/@react-spectrum/checkbox/src/Checkbox.tsx","./node_modules/@adobe/spectrum-css-temp/components/fieldlabel/vars.css","./node_modules/@adobe/spectrum-css-temp/components/fieldgroup/vars.css","./packages/@react-spectrum/checkbox/src/CheckboxGroup.tsx"],"sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n\nvar $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {CheckboxGroupState} from '@react-stately/checkbox';\nimport React from 'react';\n\nexport const CheckboxGroupContext = React.createContext<CheckboxGroupState>(null);\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n@import './index.css';\n@import './skin.css';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {CheckboxGroupContext} from './context';\nimport CheckmarkSmall from '@spectrum-icons/ui/CheckmarkSmall';\nimport {classNames, useFocusableRef, useStyleProps} from '@react-spectrum/utils';\nimport DashSmall from '@spectrum-icons/ui/DashSmall';\nimport {FocusableRef} from '@react-types/shared';\nimport {FocusRing} from '@react-aria/focus';\nimport React, {forwardRef, useContext, useRef} from 'react';\nimport {SpectrumCheckboxProps} from '@react-types/checkbox';\nimport styles from '@adobe/spectrum-css-temp/components/checkbox/vars.css';\nimport {useCheckbox, useCheckboxGroupItem} from '@react-aria/checkbox';\nimport {useHover} from '@react-aria/interactions';\nimport {useProviderProps} from '@react-spectrum/provider';\nimport {useToggleState} from '@react-stately/toggle';\n\nfunction Checkbox(props: SpectrumCheckboxProps, ref: FocusableRef<HTMLLabelElement>) {\n  let originalProps = props;\n  props = useProviderProps(props);\n  let {\n    isIndeterminate = false,\n    isEmphasized = false,\n    isDisabled = false,\n    autoFocus,\n    children,\n    validationState,\n    ...otherProps\n  } = props;\n  let {styleProps} = useStyleProps(otherProps);\n  let {hoverProps, isHovered} = useHover({isDisabled});\n\n  let inputRef = useRef<HTMLInputElement>(null);\n  let domRef = useFocusableRef(ref, inputRef);\n\n  // Swap hooks depending on whether this checkbox is inside a CheckboxGroup.\n  // This is a bit unorthodox. Typically, hooks cannot be called in a conditional,\n  // but since the checkbox won't move in and out of a group, it should be safe.\n  let groupState = useContext(CheckboxGroupContext);\n  let {inputProps} = groupState\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    ? useCheckboxGroupItem({\n      ...props,\n      // Value is optional for standalone checkboxes, but required for CheckboxGroup items;\n      // it's passed explicitly here to avoid typescript error (requires strictNullChecks disabled).\n      value: props.value,\n      // Only pass isRequired and validationState to react-aria if they came from\n      // the props for this individual checkbox, and not from the group via context.\n      isRequired: originalProps.isRequired,\n      validationState: originalProps.validationState\n    }, groupState, inputRef)\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    : useCheckbox(props, useToggleState(props), inputRef);\n\n  let markIcon = isIndeterminate\n    ? <DashSmall UNSAFE_className={classNames(styles, 'spectrum-Checkbox-partialCheckmark')} />\n    : <CheckmarkSmall UNSAFE_className={classNames(styles, 'spectrum-Checkbox-checkmark')} />;\n\n  if (groupState) {\n    for (let key of ['isSelected', 'defaultSelected', 'isEmphasized']) {\n      if (originalProps[key] != null) {\n        console.warn(`${key} is unsupported on individual <Checkbox> elements within a <CheckboxGroup>. Please apply these props to the group instead.`);\n      }\n    }\n    if (props.value == null) {\n      console.warn('A <Checkbox> element within a <CheckboxGroup> requires a `value` property.');\n    }\n  }\n\n  return (\n    <label\n      {...styleProps}\n      {...hoverProps}\n      ref={domRef}\n      className={\n        classNames(\n          styles,\n          'spectrum-Checkbox',\n          {\n            'is-checked': inputProps.checked,\n            'is-indeterminate': isIndeterminate,\n            'spectrum-Checkbox--quiet': !isEmphasized,\n            'is-invalid': validationState === 'invalid',\n            'is-disabled': isDisabled,\n            'is-hovered': isHovered\n          },\n          styleProps.className\n        )\n      }>\n      <FocusRing focusRingClass={classNames(styles, 'focus-ring')} autoFocus={autoFocus}>\n        <input\n          {...inputProps}\n          ref={inputRef}\n          className={classNames(styles, 'spectrum-Checkbox-input')} />\n      </FocusRing>\n      <span className={classNames(styles, 'spectrum-Checkbox-box')}>{markIcon}</span>\n      {children && (\n        <span className={classNames(styles, 'spectrum-Checkbox-label')}>\n          {children}\n        </span>\n      )}\n    </label>\n  );\n}\n/**\n * Checkboxes allow users to select multiple items from a list of individual items,\n * or to mark one individual item as selected.\n */\nlet _Checkbox = forwardRef(Checkbox);\nexport {_Checkbox as Checkbox};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n@import './index.css';\n@import './skin.css';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n@import './index.css';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {CheckboxGroupContext} from './context';\nimport {classNames, useDOMRef, useStyleProps} from '@react-spectrum/utils';\nimport {DOMRef, LabelPosition} from '@react-types/shared';\nimport {Label} from '@react-spectrum/label';\nimport labelStyles from '@adobe/spectrum-css-temp/components/fieldlabel/vars.css';\nimport {Provider, useProviderProps} from '@react-spectrum/provider';\nimport React from 'react';\nimport {SpectrumCheckboxGroupProps} from '@react-types/checkbox';\nimport styles from '@adobe/spectrum-css-temp/components/fieldgroup/vars.css';\nimport {useCheckboxGroup} from '@react-aria/checkbox';\nimport {useCheckboxGroupState} from '@react-stately/checkbox';\nimport {useFormProps} from '@react-spectrum/form';\n\nfunction CheckboxGroup(props: SpectrumCheckboxGroupProps, ref: DOMRef<HTMLDivElement>) {\n  props = useProviderProps(props);\n  props = useFormProps(props);\n  let {\n    isEmphasized,\n    isRequired,\n    necessityIndicator,\n    label,\n    labelPosition = 'top' as LabelPosition,\n    labelAlign,\n    children,\n    orientation = 'vertical',\n    validationState,\n    ...otherProps\n  } = props;\n  let domRef = useDOMRef(ref);\n  let {styleProps} = useStyleProps(otherProps);\n  let state = useCheckboxGroupState(props);\n  let {labelProps, groupProps} = useCheckboxGroup(props, state);\n\n  return (\n    <div\n      {...styleProps}\n      {...groupProps}\n      className={\n        classNames(\n          styles,\n          'spectrum-FieldGroup',\n          {\n            'spectrum-FieldGroup--positionSide': labelPosition === 'side'\n          },\n          // This is so checkbox group works inside a <Form>\n          classNames(\n            labelStyles,\n            'spectrum-Field'\n          ),\n          styleProps.className\n        )\n      }\n      ref={domRef}>\n      {label &&\n        <Label\n          {...labelProps}\n          elementType=\"span\"\n          labelPosition={labelPosition}\n          labelAlign={labelAlign}\n          isRequired={isRequired}\n          necessityIndicator={necessityIndicator}\n          includeNecessityIndicatorInAccessibilityName>\n          {label}\n        </Label>\n      }\n      <div\n        role=\"presentation\"\n        className={\n          classNames(\n            styles,\n            'spectrum-FieldGroup-group',\n            {\n              'spectrum-FieldGroup-group--horizontal': orientation === 'horizontal'\n            }\n          )\n        }>\n        <Provider isEmphasized={isEmphasized} validationState={validationState}>\n          <CheckboxGroupContext.Provider value={state}>\n            {children}\n          </CheckboxGroupContext.Provider>\n        </Provider>\n      </div>\n    </div>\n  );\n}\n\n/**\n * A CheckboxGroup allows users to select one or more items from a list of choices.\n */\nconst _CheckboxGroup = React.forwardRef(CheckboxGroup);\nexport {_CheckboxGroup as CheckboxGroup};\n"],"names":["$parcel$interopDefault","a","__esModule","default","CheckboxGroupContext","React","createContext","Checkbox","props","ref","originalProps","useProviderProps","isIndeterminate","isEmphasized","isDisabled","autoFocus","children","validationState","otherProps","styleProps","useStyleProps","hoverProps","isHovered","useHover","inputRef","useRef","domRef","useFocusableRef","groupState","useContext","inputProps","useCheckboxGroupItem","value","isRequired","useCheckbox","useToggleState","markIcon","classNames","key","console","warn","checked","className","_Checkbox","forwardRef","CheckboxGroup","useFormProps","necessityIndicator","label","labelPosition","labelAlign","orientation","useDOMRef","state","useCheckboxGroupState","labelProps","groupProps","useCheckboxGroup","_CheckboxGroup"],"version":3,"file":"module.js.map"}