{"mappings":"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","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./node_modules/@adobe/spectrum-css-temp/components/tabs/vars.css","./packages/@react-spectrum/tabs/src/Tabs.tsx"],"sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n\nvar $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n@import './index.css';\n@import './skin.css';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {classNames, SlotProvider, unwrapDOMRef, useDOMRef, useStyleProps, useValueEffect} from '@react-spectrum/utils';\nimport {DOMProps, DOMRef, Node, Orientation} from '@react-types/shared';\nimport {FocusRing} from '@react-aria/focus';\nimport {Item, Picker} from '@react-spectrum/picker';\nimport {ListCollection, SingleSelectListState} from '@react-stately/list';\nimport {mergeProps, useId, useLayoutEffect} from '@react-aria/utils';\nimport React, {Key, MutableRefObject, ReactElement, useCallback, useContext, useEffect, useRef, useState} from 'react';\nimport {SpectrumPickerProps} from '@react-types/select';\nimport {SpectrumTabListProps, SpectrumTabPanelsProps, SpectrumTabsProps} from '@react-types/tabs';\nimport styles from '@adobe/spectrum-css-temp/components/tabs/vars.css';\nimport {TabListState, useTabListState} from '@react-stately/tabs';\nimport {Text} from '@react-spectrum/text';\nimport {useCollection} from '@react-stately/collections';\nimport {useHover} from '@react-aria/interactions';\nimport {useLocale} from '@react-aria/i18n';\nimport {useProvider, useProviderProps} from '@react-spectrum/provider';\nimport {useResizeObserver} from '@react-aria/utils';\nimport {useTab, useTabList, useTabPanel} from '@react-aria/tabs';\n\ninterface TabsContext<T> {\n  tabProps: SpectrumTabsProps<T>,\n  tabState: {\n    tabListState: TabListState<T>,\n    setTabListState: (state: TabListState<T>) => void,\n    selectedTab: HTMLElement,\n    collapse: boolean\n  },\n  refs: {\n    wrapperRef: MutableRefObject<HTMLDivElement>,\n    tablistRef: MutableRefObject<HTMLDivElement>\n  },\n  tabPanelProps: {\n    'aria-labelledby': string\n  }\n}\n\nconst TabContext = React.createContext<TabsContext<any>>(null);\n\nfunction Tabs<T extends object>(props: SpectrumTabsProps<T>, ref: DOMRef<HTMLDivElement>) {\n  props = useProviderProps(props);\n  let {\n    orientation = 'horizontal' as Orientation,\n    density = 'regular',\n    children,\n    ...otherProps\n  } = props;\n\n  let domRef = useDOMRef(ref);\n  let tablistRef = useRef<HTMLDivElement>();\n  let wrapperRef = useRef<HTMLDivElement>();\n\n  let {direction} = useLocale();\n  let {styleProps} = useStyleProps(otherProps);\n  let [collapse, setCollapse] = useValueEffect(false);\n  let [selectedTab, setSelectedTab] = useState<HTMLElement>();\n  const [tabListState, setTabListState] = useState<TabListState<T>>(null);\n\n  useEffect(() => {\n    if (tablistRef.current) {\n      let selectedTab: HTMLElement = tablistRef.current.querySelector(`[data-key=\"${tabListState?.selectedKey}\"]`);\n\n      if (selectedTab != null) {\n        setSelectedTab(selectedTab);\n      }\n    }\n    // collapse is in the dep array so selectedTab can be updated for TabLine positioning\n  }, [children, tabListState?.selectedKey, collapse, tablistRef]);\n\n  let checkShouldCollapse = useCallback(() => {\n    let computeShouldCollapse = () => {\n      if (wrapperRef.current) {\n        let tabsComponent = wrapperRef.current;\n        let tabs = tablistRef.current.querySelectorAll('[role=\"tab\"]');\n        let lastTab = tabs[tabs.length - 1];\n\n        let end = direction === 'rtl' ? 'left' : 'right';\n        let farEdgeTabList = tabsComponent.getBoundingClientRect()[end];\n        let farEdgeLastTab = lastTab?.getBoundingClientRect()[end];\n        let shouldCollapse = direction === 'rtl' ? farEdgeLastTab < farEdgeTabList : farEdgeTabList < farEdgeLastTab;\n\n        return shouldCollapse;\n      }\n    };\n\n    if (orientation !== 'vertical') {\n      setCollapse(function* () {\n        // Make Tabs render in non-collapsed state\n        yield false;\n\n        // Compute if Tabs should collapse and update\n        yield computeShouldCollapse();\n      });\n    }\n  }, [tablistRef, wrapperRef, direction, orientation, setCollapse]);\n\n  useEffect(() => {\n    checkShouldCollapse();\n  }, [children, checkShouldCollapse]);\n\n  useResizeObserver({ref: wrapperRef, onResize: checkShouldCollapse});\n\n  let tabPanelProps = {\n    'aria-labelledby': undefined\n  };\n\n  // When the tabs are collapsed, the tabPanel should be labelled by the Picker button element.\n  let collapsibleTabListId = useId();\n  if (collapse && orientation !== 'vertical') {\n    tabPanelProps['aria-labelledby'] = collapsibleTabListId;\n  }\n  return (\n    <TabContext.Provider\n      value={{\n        tabProps: {...props, orientation, density},\n        tabState: {tabListState, setTabListState, selectedTab, collapse},\n        refs: {tablistRef, wrapperRef},\n        tabPanelProps\n      }}>\n      <div\n        {...styleProps}\n        ref={domRef}\n        className={classNames(\n          styles,\n          'spectrum-TabsPanel',\n          `spectrum-TabsPanel--${orientation}`,\n          styleProps.className\n        )}>\n        {props.children}\n      </div>\n    </TabContext.Provider>\n  );\n}\n\ninterface TabProps<T> extends DOMProps {\n  item: Node<T>,\n  state: SingleSelectListState<T>,\n  isDisabled?: boolean,\n  orientation?: Orientation\n}\n\n// @private\nfunction Tab<T>(props: TabProps<T>) {\n  let {item, state, isDisabled: propsDisabled} = props;\n  let {key, rendered} = item;\n  let isDisabled = propsDisabled || state.disabledKeys.has(key);\n\n  let ref = useRef<HTMLDivElement>();\n  let {tabProps} = useTab({key, isDisabled}, state, ref);\n\n  let {hoverProps, isHovered} = useHover({\n    ...props\n  });\n  let isSelected = state.selectedKey === key;\n\n  return (\n    <FocusRing focusRingClass={classNames(styles, 'focus-ring')}>\n      <div\n        {...mergeProps(tabProps, hoverProps)}\n        ref={ref}\n        className={classNames(\n          styles,\n          'spectrum-Tabs-item',\n          {\n            'is-selected': isSelected,\n            'is-disabled': isDisabled,\n            'is-hovered': isHovered\n          }\n        )}>\n        <SlotProvider\n          slots={{\n            icon: {\n              size: 'S',\n              UNSAFE_className: classNames(styles, 'spectrum-Icon')\n            },\n            text: {\n              UNSAFE_className: classNames(styles, 'spectrum-Tabs-itemLabel')\n            }\n          }}>\n          {typeof rendered === 'string'\n            ? <Text>{rendered}</Text>\n            : rendered}\n        </SlotProvider>\n      </div>\n    </FocusRing>\n  );\n}\n\ninterface TabLineProps {\n  orientation?: Orientation,\n  selectedTab?: HTMLElement,\n  selectedKey?: Key\n}\n\n// @private\nfunction TabLine(props: TabLineProps) {\n  let {\n    orientation,\n    // Is either the tab node (non-collapsed) or the picker node (collapsed)\n    selectedTab,\n    // selectedKey is provided so that the TabLine styles are updated when the TabPicker's width updates from a selection change\n    selectedKey\n  } = props;\n\n  let {direction} = useLocale();\n  let {scale} = useProvider();\n\n  let [style, setStyle] = useState({\n    width: undefined,\n    height: undefined\n  });\n\n  useLayoutEffect(() => {\n    if (selectedTab) {\n      let styleObj = {transform: undefined, width: undefined, height: undefined};\n      // In RTL, calculate the transform from the right edge of the tablist so that resizing the window doesn't break the Tabline position due to offsetLeft changes\n      let offset = direction === 'rtl' ? -1 * ((selectedTab.offsetParent as HTMLElement)?.offsetWidth - selectedTab.offsetWidth - selectedTab.offsetLeft) : selectedTab.offsetLeft;\n      styleObj.transform = orientation === 'vertical'\n        ? `translateY(${selectedTab.offsetTop}px)`\n        : `translateX(${offset}px)`;\n\n      if (orientation === 'horizontal') {\n        styleObj.width = `${selectedTab.offsetWidth}px`;\n      } else {\n        styleObj.height = `${selectedTab.offsetHeight}px`;\n      }\n      setStyle(styleObj);\n    }\n\n  }, [direction, setStyle, selectedTab, orientation, scale, selectedKey]);\n\n  return <div className={classNames(styles, 'spectrum-Tabs-selectionIndicator')} role=\"presentation\" style={style} />;\n}\n\n/**\n * A TabList is used within Tabs to group tabs that a user can switch between.\n * The keys of the items within the <TabList> must match up with a corresponding item inside the <TabPanels>.\n */\nexport function TabList<T>(props: SpectrumTabListProps<T>) {\n  const tabContext = useContext(TabContext);\n  const {refs, tabState, tabProps, tabPanelProps} = tabContext;\n  const {isQuiet, density, isDisabled, orientation} = tabProps;\n  const {selectedTab, collapse, setTabListState} = tabState;\n  const {tablistRef, wrapperRef} = refs;\n  // Pass original Tab props but override children to create the collection.\n  const state = useTabListState({...tabProps, children: props.children});\n\n  let {styleProps} = useStyleProps(props);\n  const {tabListProps} = useTabList({...tabProps, ...props}, state, tablistRef);\n\n  useEffect(() => {\n    // Passing back to root as useTabPanel needs the TabListState\n    setTabListState(state);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.disabledKeys, state.selectedItem, state.selectedKey, props.children]);\n  let stylePropsForVertical = orientation === 'vertical' ? styleProps : {};\n\n  let tabListclassName = classNames(styles, 'spectrum-TabsPanel-tabs');\n  const tabContent = (\n    <div\n      {...stylePropsForVertical}\n      {...tabListProps}\n      ref={tablistRef}\n      className={classNames(\n        styles,\n        'spectrum-Tabs',\n        `spectrum-Tabs--${orientation}`,\n        tabListclassName,\n        {\n          'spectrum-Tabs--quiet': isQuiet,\n          ['spectrum-Tabs--compact']: density === 'compact'\n        },\n        orientation === 'vertical' && styleProps.className\n      )\n      }>\n      {[...state.collection].map((item) => (\n        <Tab key={item.key} item={item} state={state} isDisabled={isDisabled} orientation={orientation} />\n      ))}\n      <TabLine orientation={orientation} selectedTab={selectedTab} />\n    </div>\n  );\n\n\n  if (orientation === 'vertical') {\n    return tabContent;\n  } else {\n    return (\n      <div\n        {...styleProps}\n        ref={wrapperRef}\n        className={classNames(\n          styles,\n          'spectrum-TabsPanel-collapseWrapper',\n          styleProps.className\n        )}>\n        {collapse ? <TabPicker {...props} {...tabProps} id={tabPanelProps['aria-labelledby']} state={state} className={tabListclassName} /> : tabContent}\n      </div>\n    );\n  }\n}\n\n/**\n * TabPanels is used within Tabs as a container for the content of each tab.\n * The keys of the items within the <TabPanels> must match up with a corresponding item inside the <TabList>.\n */\nexport function TabPanels<T>(props: SpectrumTabPanelsProps<T>) {\n  const {tabState, tabProps} = useContext(TabContext);\n  const {tabListState} = tabState;\n\n  const factory = nodes => new ListCollection(nodes);\n  const collection = useCollection({items: tabProps.items, ...props}, factory, {suppressTextValueWarning: true});\n  const selectedItem = tabListState ? collection.getItem(tabListState.selectedKey) : null;\n\n  return (\n    <TabPanel {...props} key={tabListState?.selectedKey}>\n      {selectedItem && selectedItem.props.children}\n    </TabPanel>\n  );\n}\n\n// @private\nfunction TabPanel<T>(props: SpectrumTabPanelsProps<T>) {\n  const {tabState, tabPanelProps: ctxTabPanelProps} = useContext(TabContext);\n  const {tabListState} = tabState;\n  let ref = useRef();\n  const {tabPanelProps} = useTabPanel(props, tabListState, ref);\n  let {styleProps} = useStyleProps(props);\n\n  if (ctxTabPanelProps['aria-labelledby']) {\n    tabPanelProps['aria-labelledby'] = ctxTabPanelProps['aria-labelledby'];\n  }\n\n  return (\n    <FocusRing focusRingClass={classNames(styles, 'focus-ring')}>\n      <div {...styleProps} {...tabPanelProps} ref={ref} className={classNames(styles, 'spectrum-TabsPanel-tabpanel', styleProps.className)}>\n        {props.children}\n      </div>\n    </FocusRing>\n  );\n}\n\ninterface TabPickerProps<T> extends Omit<SpectrumPickerProps<T>, 'children'> {\n  density?: 'compact' | 'regular',\n  state: SingleSelectListState<T>,\n  className?: string\n}\n\nfunction TabPicker<T>(props: TabPickerProps<T>) {\n  let {\n    isDisabled,\n    isQuiet,\n    state,\n    'aria-labelledby': ariaLabeledBy,\n    'aria-label': ariaLabel,\n    density,\n    className,\n    id\n  } = props;\n\n  let ref = useRef();\n  let [pickerNode, setPickerNode] = useState(null);\n\n  useEffect(() => {\n    let node = unwrapDOMRef(ref);\n    setPickerNode(node.current);\n  }, [ref]);\n\n  let items = [...state.collection].map((item) => ({\n    rendered: item.rendered,\n    textValue: item.textValue,\n    id: item.key\n  }));\n\n  let pickerProps = {\n    'aria-labelledby': ariaLabeledBy,\n    'aria-label': ariaLabel\n  };\n\n  // TODO: Figure out if tabListProps should go onto the div here, v2 doesn't do it\n  return (\n    <div\n      className={classNames(\n        styles,\n        'spectrum-Tabs',\n        'spectrum-Tabs--horizontal',\n        'spectrum-Tabs--isCollapsed',\n        {\n          'spectrum-Tabs--quiet': isQuiet,\n          ['spectrum-Tabs--compact']: density === 'compact'\n        },\n        className\n      )}>\n      <SlotProvider\n        slots={{\n          icon: {\n            size: 'S',\n            UNSAFE_className: classNames(styles, 'spectrum-Icon')\n          },\n          button: {\n            focusRingClass: classNames(styles, 'focus-ring')\n          }\n        }}>\n        <Picker\n          {...pickerProps}\n          id={id}\n          items={items}\n          ref={ref}\n          isQuiet\n          isDisabled={isDisabled}\n          selectedKey={state.selectedKey}\n          disabledKeys={state.disabledKeys}\n          onSelectionChange={state.setSelectedKey}>\n          {item => <Item textValue={item.textValue}>{item.rendered}</Item>}\n        </Picker>\n        {pickerNode && <TabLine orientation=\"horizontal\" selectedTab={pickerNode} selectedKey={state.selectedKey} />}\n      </SlotProvider>\n    </div>\n  );\n}\n\n/**\n * Tabs organize content into multiple sections and allow users to navigate between them. The content under the set of tabs should be related and form a coherent unit.\n */\n// forwardRef doesn't support generic parameters, so cast the result to the correct type\n// https://stackoverflow.com/questions/58469229/react-with-typescript-generics-while-using-react-forwardref\nconst _Tabs = React.forwardRef(Tabs) as <T>(props: SpectrumTabsProps<T> & {ref?: DOMRef<HTMLDivElement>}) => ReactElement;\nexport {_Tabs as Tabs};\n"],"names":["$parcel$interopDefault","a","__esModule","default","TabContext","React","createContext","Tabs","props","ref","useProviderProps","orientation","density","children","otherProps","domRef","useDOMRef","tablistRef","useRef","wrapperRef","direction","useLocale","styleProps","useStyleProps","collapse","setCollapse","useValueEffect","selectedTab","setSelectedTab","useState","tabListState","setTabListState","useEffect","current","querySelector","selectedKey","checkShouldCollapse","useCallback","computeShouldCollapse","tabsComponent","tabs","querySelectorAll","lastTab","length","end","farEdgeTabList","getBoundingClientRect","farEdgeLastTab","shouldCollapse","useResizeObserver","onResize","tabPanelProps","undefined","collapsibleTabListId","useId","tabProps","tabState","refs","classNames","className","Tab","item","state","isDisabled","propsDisabled","key","rendered","disabledKeys","has","useTab","hoverProps","isHovered","useHover","isSelected","mergeProps","icon","size","UNSAFE_className","text","TabLine","scale","useProvider","style","setStyle","width","height","useLayoutEffect","styleObj","transform","offset","offsetParent","offsetWidth","offsetLeft","offsetTop","offsetHeight","TabList","tabContext","useContext","isQuiet","useTabListState","tabListProps","useTabList","selectedItem","stylePropsForVertical","tabListclassName","tabContent","collection","map","TabPanels","factory","nodes","ListCollection","useCollection","items","suppressTextValueWarning","getItem","TabPanel","ctxTabPanelProps","useTabPanel","TabPicker","ariaLabeledBy","ariaLabel","id","pickerNode","setPickerNode","node","unwrapDOMRef","textValue","pickerProps","button","focusRingClass","setSelectedKey","_Tabs","forwardRef"],"version":3,"file":"main.js.map"}