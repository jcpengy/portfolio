{"mappings":"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","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./node_modules/@adobe/spectrum-css-temp/components/fieldlabel/vars.css","./node_modules/@adobe/spectrum-css-temp/components/textfield/vars.css","./packages/@react-spectrum/textfield/src/TextFieldBase.tsx","./packages/@react-spectrum/textfield/src/TextArea.tsx","./packages/@react-spectrum/textfield/src/TextField.tsx"],"sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n\nvar $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n@import './index.css';\n@import './skin.css';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n@import './index.css';\n@import './skin.css';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport AlertMedium from '@spectrum-icons/ui/AlertMedium';\nimport CheckmarkMedium from '@spectrum-icons/ui/CheckmarkMedium';\nimport {\n  classNames,\n  createFocusableRef,\n  useStyleProps\n} from '@react-spectrum/utils';\nimport {FocusRing} from '@react-aria/focus';\nimport {Label} from '@react-spectrum/label';\nimport {LabelPosition, PressEvents} from '@react-types/shared';\nimport labelStyles from '@adobe/spectrum-css-temp/components/fieldlabel/vars.css';\nimport {mergeProps} from '@react-aria/utils';\nimport React, {cloneElement, forwardRef, InputHTMLAttributes, LabelHTMLAttributes, ReactElement, Ref, RefObject, TextareaHTMLAttributes, useImperativeHandle, useRef} from 'react';\nimport {SpectrumTextFieldProps, TextFieldRef} from '@react-types/textfield';\nimport styles from '@adobe/spectrum-css-temp/components/textfield/vars.css';\nimport {useFormProps} from '@react-spectrum/form';\nimport {useHover} from '@react-aria/interactions';\nimport {useProviderProps} from '@react-spectrum/provider';\n\ninterface TextFieldBaseProps extends SpectrumTextFieldProps, PressEvents {\n  wrapperChildren?: ReactElement | ReactElement[],\n  inputClassName?: string,\n  validationIconClassName?: string,\n  multiLine?: boolean,\n  labelProps?: LabelHTMLAttributes<HTMLLabelElement>,\n  inputProps: InputHTMLAttributes<HTMLInputElement> | TextareaHTMLAttributes<HTMLTextAreaElement>,\n  inputRef?: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  loadingIndicator?: ReactElement,\n  isLoading?: boolean\n}\n\nfunction TextFieldBase(props: TextFieldBaseProps, ref: Ref<TextFieldRef>) {\n  props = useProviderProps(props);\n  props = useFormProps(props);\n  let {\n    label,\n    labelPosition = 'top' as LabelPosition,\n    labelAlign,\n    isRequired,\n    necessityIndicator,\n    validationState,\n    icon,\n    isQuiet = false,\n    isDisabled,\n    multiLine,\n    autoFocus,\n    inputClassName,\n    wrapperChildren,\n    labelProps,\n    inputProps,\n    inputRef,\n    isLoading,\n    loadingIndicator,\n    validationIconClassName,\n    ...otherProps\n  } = props;\n  let {hoverProps, isHovered} = useHover({isDisabled});\n  let domRef = useRef<HTMLDivElement>(null);\n  let defaultInputRef = useRef<HTMLInputElement | HTMLTextAreaElement>(null);\n  inputRef = inputRef || defaultInputRef;\n\n  // Expose imperative interface for ref\n  useImperativeHandle(ref, () => ({\n    ...createFocusableRef(domRef, inputRef),\n    select() {\n      if (inputRef.current) {\n        inputRef.current.select();\n      }\n    },\n    getInputElement() {\n      return inputRef.current;\n    }\n  }));\n\n  let {styleProps} = useStyleProps(otherProps);\n  let ElementType: React.ElementType = multiLine ? 'textarea' : 'input';\n  let isInvalid = validationState === 'invalid';\n\n  if (icon) {\n    let UNSAFE_className = classNames(\n      styles,\n      icon.props && icon.props.UNSAFE_className,\n      'spectrum-Textfield-icon'\n    );\n\n    icon = cloneElement(icon, {\n      UNSAFE_className,\n      size: 'S'\n    });\n  }\n\n  let validationIcon = isInvalid ? <AlertMedium /> : <CheckmarkMedium />;\n  let validation = cloneElement(validationIcon, {\n    UNSAFE_className: classNames(\n      styles,\n      'spectrum-Textfield-validationIcon',\n      validationIconClassName\n    )\n  });\n\n  let textField = (\n    <div\n      className={\n        classNames(\n          styles,\n          'spectrum-Textfield',\n          {\n            'spectrum-Textfield--invalid': isInvalid,\n            'spectrum-Textfield--valid': validationState === 'valid',\n            'spectrum-Textfield--loadable': loadingIndicator,\n            'spectrum-Textfield--quiet': isQuiet,\n            'spectrum-Textfield--multiline': multiLine\n          }\n        )\n      }>\n      <FocusRing focusRingClass={classNames(styles, 'focus-ring')} isTextInput autoFocus={autoFocus}>\n        <ElementType\n          {...mergeProps(inputProps, hoverProps)}\n          ref={inputRef as any}\n          rows={multiLine ? 1 : undefined}\n          className={\n            classNames(\n              styles,\n              'spectrum-Textfield-input',\n              {\n                'spectrum-Textfield-inputIcon': icon,\n                'is-hovered': isHovered\n              },\n              inputClassName\n            )\n          } />\n      </FocusRing>\n      {icon}\n      {validationState && !isLoading ? validation : null}\n      {isLoading && loadingIndicator}\n      {wrapperChildren}\n    </div>\n  );\n\n  if (label) {\n    let labelWrapperClass = classNames(\n      labelStyles,\n      'spectrum-Field',\n      {\n        'spectrum-Field--positionTop': labelPosition === 'top',\n        'spectrum-Field--positionSide': labelPosition === 'side'\n      },\n      styleProps.className\n    );\n\n    textField = React.cloneElement(textField, mergeProps(textField.props, {\n      className: classNames(\n        labelStyles,\n        'spectrum-Field-field',\n        {\n          'spectrum-Field-field--multiline': multiLine\n        }\n      )\n    }));\n\n    return (\n      <div\n        {...styleProps}\n        ref={domRef}\n        className={labelWrapperClass}>\n        <Label\n          {...labelProps}\n          labelPosition={labelPosition}\n          labelAlign={labelAlign}\n          isRequired={isRequired}\n          necessityIndicator={necessityIndicator}>\n          {label}\n        </Label>\n        {textField}\n      </div>\n    );\n  }\n\n  return React.cloneElement(textField, mergeProps(textField.props, {\n    ...styleProps,\n    ref: domRef\n  }));\n}\n\nconst _TextFieldBase = forwardRef(TextFieldBase);\nexport {_TextFieldBase as TextFieldBase};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {chain, useLayoutEffect} from '@react-aria/utils';\nimport React, {RefObject, useCallback, useRef} from 'react';\nimport {SpectrumTextFieldProps, TextFieldRef} from '@react-types/textfield';\nimport {TextFieldBase} from './TextFieldBase';\nimport {useControlledState} from '@react-stately/utils';\nimport {useProviderProps} from '@react-spectrum/provider';\nimport {useTextField} from '@react-aria/textfield';\n\nfunction TextArea(props: SpectrumTextFieldProps, ref: RefObject<TextFieldRef>) {\n  props = useProviderProps(props);\n  let {\n    isDisabled = false,\n    isQuiet = false,\n    isReadOnly = false,\n    isRequired = false,\n    onChange,\n    ...otherProps\n  } = props;\n\n  // not in stately because this is so we know when to re-measure, which is a spectrum design\n  let [inputValue, setInputValue] = useControlledState(props.value, props.defaultValue, () => {});\n\n  let inputRef = useRef<HTMLTextAreaElement>();\n\n  let onHeightChange = useCallback(() => {\n    if (isQuiet) {\n      let input = inputRef.current;\n      let prevAlignment = input.style.alignSelf;\n      input.style.alignSelf = 'start';\n      input.style.height = 'auto';\n      input.style.height = `${input.scrollHeight}px`;\n      input.style.alignSelf = prevAlignment;\n    }\n  }, [isQuiet, inputRef]);\n\n  useLayoutEffect(() => {\n    if (inputRef.current) {\n      onHeightChange();\n    }\n  }, [onHeightChange, inputValue, inputRef]);\n\n\n  let {labelProps, inputProps} = useTextField({\n    ...props,\n    onChange: chain(onChange, setInputValue),\n    inputElementType: 'textarea'\n  }, inputRef);\n\n  return (\n    <TextFieldBase\n      {...otherProps}\n      ref={ref}\n      inputRef={inputRef}\n      labelProps={labelProps}\n      inputProps={inputProps}\n      multiLine\n      isDisabled={isDisabled}\n      isQuiet={isQuiet}\n      isReadOnly={isReadOnly}\n      isRequired={isRequired} />\n  );\n}\n\n/**\n * TextAreas are multiline text inputs, useful for cases where users have\n * a sizable amount of text to enter. They allow for all customizations that\n * are available to text fields.\n */\nlet _TextArea = React.forwardRef(TextArea);\nexport {_TextArea as TextArea};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport React, {forwardRef, RefObject, useRef} from 'react';\nimport {SpectrumTextFieldProps, TextFieldRef} from '@react-types/textfield';\nimport {TextFieldBase} from './TextFieldBase';\nimport {useProviderProps} from '@react-spectrum/provider';\nimport {useTextField} from '@react-aria/textfield';\n\nfunction TextField(props: SpectrumTextFieldProps, ref: RefObject<TextFieldRef>) {\n  props = useProviderProps(props);\n\n  let inputRef = useRef<HTMLInputElement>();\n  let {labelProps, inputProps} = useTextField(props, inputRef);\n  return (\n    <TextFieldBase\n      {...props}\n      labelProps={labelProps}\n      inputProps={inputProps}\n      ref={ref}\n      inputRef={inputRef} />\n  );\n}\n\n/**\n * TextFields are text inputs that allow users to input custom text entries\n * with a keyboard. Various decorations can be displayed around the field to\n * communicate the entry requirements.\n */\nconst _TextField = forwardRef(TextField);\nexport {_TextField as TextField};\n"],"names":["$parcel$interopDefault","a","__esModule","default","TextFieldBase","props","ref","useProviderProps","useFormProps","label","labelPosition","labelAlign","isRequired","necessityIndicator","validationState","icon","isQuiet","isDisabled","multiLine","autoFocus","inputClassName","wrapperChildren","labelProps","inputProps","inputRef","isLoading","loadingIndicator","validationIconClassName","otherProps","hoverProps","isHovered","useHover","domRef","useRef","defaultInputRef","useImperativeHandle","createFocusableRef","select","current","getInputElement","styleProps","useStyleProps","ElementType","isInvalid","UNSAFE_className","classNames","cloneElement","size","validationIcon","validation","textField","mergeProps","undefined","labelWrapperClass","className","React","_TextFieldBase","forwardRef","TextArea","isReadOnly","onChange","inputValue","setInputValue","useControlledState","value","defaultValue","onHeightChange","useCallback","input","prevAlignment","style","alignSelf","height","scrollHeight","useLayoutEffect","useTextField","chain","inputElementType","_TextArea","TextField","_TextField"],"version":3,"file":"main.js.map"}