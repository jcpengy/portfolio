{"mappings":"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","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./node_modules/@adobe/spectrum-css-temp/components/tooltip/vars.css","./packages/@react-spectrum/tooltip/src/context.ts","./packages/@react-spectrum/tooltip/src/Tooltip.tsx","./packages/@react-spectrum/tooltip/src/TooltipTrigger.tsx"],"sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n\nvar $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n@import './index.css';\n@import './skin.css';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {PlacementAxis} from '@react-types/overlays';\nimport React, {HTMLAttributes, RefObject} from 'react';\nimport {StyleProps} from '@react-types/shared';\nimport {TooltipTriggerState} from '@react-stately/tooltip';\n\ninterface TooltipContextProps extends StyleProps {\n  state?: TooltipTriggerState,\n  ref?: RefObject<HTMLDivElement>,\n  placement?: PlacementAxis,\n  arrowProps?: HTMLAttributes<HTMLElement>\n}\n\nexport const TooltipContext = React.createContext<TooltipContextProps>({});\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport AlertSmall from '@spectrum-icons/ui/AlertSmall';\nimport {classNames, createDOMRef, useStyleProps} from '@react-spectrum/utils';\nimport {DOMRef} from '@react-types/shared';\nimport InfoSmall from '@spectrum-icons/ui/InfoSmall';\nimport {mergeProps} from '@react-aria/utils';\nimport React, {useContext, useImperativeHandle, useRef} from 'react';\nimport {SpectrumTooltipProps} from '@react-types/tooltip';\nimport styles from '@adobe/spectrum-css-temp/components/tooltip/vars.css';\nimport SuccessSmall from '@spectrum-icons/ui/SuccessSmall';\nimport {TooltipContext} from './context';\nimport {useTooltip} from '@react-aria/tooltip';\n\nlet iconMap = {\n  info: InfoSmall,\n  positive: SuccessSmall,\n  negative: AlertSmall\n};\n\nfunction Tooltip(props: SpectrumTooltipProps, ref: DOMRef) {\n  let {ref: overlayRef, arrowProps, state, ...tooltipProviderProps} = useContext(TooltipContext);\n  let defaultRef = useRef();\n  overlayRef = overlayRef || defaultRef;\n  props = mergeProps(props, tooltipProviderProps);\n  let {\n    variant = 'neutral',\n    placement = 'top',\n    isOpen,\n    showIcon,\n    ...otherProps\n  } = props;\n  let {styleProps} = useStyleProps(otherProps);\n  let {tooltipProps} = useTooltip(props, state);\n\n  // Sync ref with overlayRef from context.\n  useImperativeHandle(ref, () => createDOMRef(overlayRef));\n\n  let Icon = iconMap[variant];\n\n  return (\n    <div\n      {...styleProps}\n      {...tooltipProps}\n      className={classNames(\n        styles,\n        'spectrum-Tooltip',\n        `spectrum-Tooltip--${variant}`,\n        `spectrum-Tooltip--${placement}`,\n        {\n          'is-open': isOpen\n        },\n        styleProps.className\n      )}\n      ref={overlayRef}>\n      {showIcon && variant !== 'neutral' && <Icon UNSAFE_className={classNames(styles, 'spectrum-Tooltip-typeIcon')} aria-hidden />}\n      {props.children && (\n        <span className={classNames(styles, 'spectrum-Tooltip-label')}>\n          {props.children}\n        </span>\n      )}\n      <span {...arrowProps} className={classNames(styles, 'spectrum-Tooltip-tip')} />\n    </div>\n  );\n}\n\n/**\n * Display container for Tooltip content. Has a directional arrow dependent on its placement.\n */\nlet _Tooltip = React.forwardRef(Tooltip);\nexport {_Tooltip as Tooltip};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusableProvider} from '@react-aria/focus';\nimport {Overlay} from '@react-spectrum/overlays';\nimport React, {ReactElement, useRef} from 'react';\nimport {SpectrumTooltipTriggerProps} from '@react-types/tooltip';\nimport {TooltipContext} from './context';\nimport {useOverlayPosition} from '@react-aria/overlays';\nimport {useTooltipTrigger} from '@react-aria/tooltip';\nimport {useTooltipTriggerState} from '@react-stately/tooltip';\n\nconst DEFAULT_OFFSET = -1; // Offset needed to reach 4px/5px (med/large) distance between tooltip and trigger button\nconst DEFAULT_CROSS_OFFSET = 0;\n\nfunction TooltipTrigger(props: SpectrumTooltipTriggerProps) {\n  let {\n    children,\n    crossOffset = DEFAULT_CROSS_OFFSET,\n    isDisabled,\n    offset = DEFAULT_OFFSET,\n    trigger: triggerAction\n  } = props;\n\n  let [trigger, tooltip] = React.Children.toArray(children);\n\n  let state = useTooltipTriggerState(props);\n\n  let tooltipTriggerRef = useRef<HTMLElement>();\n  let overlayRef = useRef<HTMLDivElement>();\n\n  let {triggerProps, tooltipProps} = useTooltipTrigger({\n    isDisabled,\n    trigger: triggerAction\n  }, state, tooltipTriggerRef);\n\n  let {overlayProps, arrowProps, placement} = useOverlayPosition({\n    placement: props.placement || 'top',\n    targetRef: tooltipTriggerRef,\n    overlayRef,\n    offset,\n    crossOffset,\n    isOpen: state.isOpen\n  });\n\n  return (\n    <FocusableProvider\n      {...triggerProps}\n      ref={tooltipTriggerRef}>\n      {trigger}\n      <TooltipContext.Provider\n        value={{\n          state,\n          placement,\n          ref: overlayRef,\n          UNSAFE_style: overlayProps.style,\n          arrowProps,\n          ...tooltipProps\n        }}>\n        <Overlay isOpen={state.isOpen}>\n          {tooltip}\n        </Overlay>\n      </TooltipContext.Provider>\n    </FocusableProvider>\n  );\n}\n\n// Support TooltipTrigger inside components using CollectionBuilder.\nTooltipTrigger.getCollectionNode = function* (props: SpectrumTooltipTriggerProps) {\n  // Replaced the use of React.Childern.toArray because it mutates the key prop.\n  let childArray: ReactElement[] = [];\n  React.Children.forEach(props.children, child => {\n    if (React.isValidElement(child)) {\n      childArray.push(child);\n    }\n  });\n  let [trigger, tooltip] = childArray;\n  yield {\n    element: trigger,\n    wrapper: (element) => (\n      <TooltipTrigger key={element.key} {...props}>\n        {element}\n        {tooltip}\n      </TooltipTrigger>\n    )\n  };\n};\n\n/**\n * TooltipTrigger wraps around a trigger element and a Tooltip. It handles opening and closing\n * the Tooltip when the user hovers over or focuses the trigger, and positioning the Tooltip\n * relative to the trigger.\n */\n// We don't want getCollectionNode to show up in the type definition\nlet _TooltipTrigger = TooltipTrigger as (props: SpectrumTooltipTriggerProps) => JSX.Element;\nexport {_TooltipTrigger as TooltipTrigger};\n"],"names":["$parcel$interopDefault","a","__esModule","default","TooltipContext","React","createContext","iconMap","info","InfoSmall","positive","SuccessSmall","negative","AlertSmall","Tooltip","props","ref","useContext","overlayRef","arrowProps","state","tooltipProviderProps","defaultRef","useRef","mergeProps","variant","placement","isOpen","showIcon","otherProps","styleProps","useStyleProps","tooltipProps","useTooltip","useImperativeHandle","createDOMRef","Icon","classNames","className","children","_Tooltip","forwardRef","DEFAULT_OFFSET","DEFAULT_CROSS_OFFSET","TooltipTrigger","crossOffset","isDisabled","offset","trigger","triggerAction","tooltip","Children","toArray","useTooltipTriggerState","tooltipTriggerRef","triggerProps","useTooltipTrigger","overlayProps","useOverlayPosition","targetRef","UNSAFE_style","style","getCollectionNode","childArray","forEach","child","isValidElement","push","element","wrapper","key","_TooltipTrigger"],"version":3,"file":"main.js.map"}