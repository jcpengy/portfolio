import { useNumberFieldState } from "@react-stately/numberfield";
import { useNumberField } from "@react-aria/numberfield";
import { useLocale } from "@react-aria/i18n";
import { useFormProps } from "@react-spectrum/form";
import { TextFieldBase } from "@react-spectrum/textfield";
import { useProvider, useProviderProps } from "@react-spectrum/provider";
import { useHover } from "@react-aria/interactions";
import { useButton } from "@react-aria/button";
import _spectrumIconsWorkflowRemove from "@spectrum-icons/workflow/Remove";
import _spectrumIconsUiChevronUpSmall from "@spectrum-icons/ui/ChevronUpSmall";
import _spectrumIconsUiChevronDownSmall from "@spectrum-icons/ui/ChevronDownSmall";
import _spectrumIconsWorkflowAdd from "@spectrum-icons/workflow/Add";
import _react, { useRef } from "react";
import { mergeProps } from "@react-aria/utils";
import { FocusRing } from "@react-aria/focus";
import { Field } from "@react-spectrum/label";
import { classNames, useFocusableRef, useStyleProps } from "@react-spectrum/utils";
import _babelRuntimeHelpersEsmExtends from "@babel/runtime/helpers/esm/extends";
import "./main.css";

function $parcel$interopDefault(a) {
  return a && a.__esModule ? a.default : a;
}

// ASSET: /Users/govett/dev/react-spectrum-v3/node_modules/@adobe/spectrum-css-temp/components/stepper/vars.css
var $f59dc5c86d09fd6e5e0bfdeb14adb76$exports = {};
$f59dc5c86d09fd6e5e0bfdeb14adb76$exports = {
  "spectrum-Button": "_spectrum-Button_82b07",
  "spectrum-ActionButton": "_spectrum-ActionButton_82b07",
  "spectrum-LogicButton": "_spectrum-LogicButton_82b07",
  "spectrum-FieldButton": "_spectrum-FieldButton_82b07",
  "spectrum-ClearButton": "_spectrum-ClearButton_82b07",
  "spectrum-Stepper-button": "_spectrum-Stepper-button_82b07",
  "focus-ring": "_focus-ring_82b07",
  "spectrum-Icon": "_spectrum-Icon_82b07",
  "is-hovered": "_is-hovered_82b07",
  "spectrum-Button-label": "_spectrum-Button-label_82b07",
  "spectrum-ActionButton-label": "_spectrum-ActionButton-label_82b07",
  "spectrum-ActionButton-hold": "_spectrum-ActionButton-hold_82b07",
  "spectrum-ActionButton--quiet": "_spectrum-ActionButton--quiet_82b07",
  "is-disabled": "_is-disabled_82b07",
  "is-open": "_is-open_82b07",
  "spectrum-FieldButton--quiet": "_spectrum-FieldButton--quiet_82b07",
  "spectrum-ClearButton--overBackground": "_spectrum-ClearButton--overBackground_82b07",
  "spectrum-ClearButton--small": "_spectrum-ClearButton--small_82b07",
  "spectrum-Stepper": "_spectrum-Stepper_82b07",
  "spectrum-Stepper--isMobile": "_spectrum-Stepper--isMobile_82b07",
  "spectrum-Stepper-button--stepUp": "_spectrum-Stepper-button--stepUp_82b07",
  "spectrum-Stepper-button--stepDown": "_spectrum-Stepper-button--stepDown_82b07",
  "spectrum-Stepper-field": "_spectrum-Stepper-field_82b07",
  "spectrum-Stepper-icon": "_spectrum-Stepper-icon_82b07",
  "spectrum-Stepper--isQuiet": "_spectrum-Stepper--isQuiet_82b07",
  "spectrum-Stepper--showStepper": "_spectrum-Stepper--showStepper_82b07",
  "spectrum-Stepper-input": "_spectrum-Stepper-input_82b07",
  "spectrum-Stepper-container": "_spectrum-Stepper-container_82b07",
  "spectrum-Stepper-container--isMobile": "_spectrum-Stepper-container--isMobile_82b07",
  "spectrum-Stepper-button-icon": "_spectrum-Stepper-button-icon_82b07",
  "is-active": "_is-active_82b07",
  "is-focused": "_is-focused_82b07",
  "is-invalid": "_is-invalid_82b07"
};
var $f59dc5c86d09fd6e5e0bfdeb14adb76$$interop$default = $parcel$interopDefault($f59dc5c86d09fd6e5e0bfdeb14adb76$exports);

function $e8890c86611923a54f7b8663bc47c34$var$StepButton(props, ref) {
  props = useProviderProps(props);
  let {
    scale
  } = useProvider();
  let {
    direction,
    isDisabled,
    isQuiet
  } = props;
  /**
   * Must use div for now because Safari pointer event bugs on disabled form elements.
   * Link https://bugs.webkit.org/show_bug.cgi?id=219188.
   */

  let {
    buttonProps,
    isPressed
  } = useButton(_babelRuntimeHelpersEsmExtends({}, props, {
    elementType: 'div'
  }), ref);
  let {
    hoverProps,
    isHovered
  } = useHover(props);
  return /*#__PURE__*/_react.createElement(FocusRing, {
    focusRingClass: classNames($f59dc5c86d09fd6e5e0bfdeb14adb76$$interop$default, 'focus-ring')
  }, /*#__PURE__*/_react.createElement("div", _babelRuntimeHelpersEsmExtends({
    className: classNames($f59dc5c86d09fd6e5e0bfdeb14adb76$$interop$default, 'spectrum-Stepper-button', {
      'spectrum-Stepper-button--stepUp': direction === 'up',
      'spectrum-Stepper-button--stepDown': direction === 'down',
      'spectrum-Stepper-button--isQuiet': isQuiet,
      'is-hovered': isHovered,
      'is-active': isPressed,
      'is-disabled': isDisabled
    })
  }, mergeProps(hoverProps, buttonProps), {
    ref: ref
  }), direction === 'up' && scale === 'large' && /*#__PURE__*/_react.createElement(_spectrumIconsWorkflowAdd, {
    UNSAFE_className: classNames($f59dc5c86d09fd6e5e0bfdeb14adb76$$interop$default, 'spectrum-Stepper-button-icon', 'spectrum-Stepper-stepUpIcon'),
    size: "S"
  }), direction === 'up' && scale === 'medium' && /*#__PURE__*/_react.createElement(_spectrumIconsUiChevronUpSmall, {
    UNSAFE_className: classNames($f59dc5c86d09fd6e5e0bfdeb14adb76$$interop$default, 'spectrum-Stepper-button-icon', 'spectrum-Stepper-stepUpIcon')
  }), direction === 'down' && scale === 'large' && /*#__PURE__*/_react.createElement(_spectrumIconsWorkflowRemove, {
    UNSAFE_className: classNames($f59dc5c86d09fd6e5e0bfdeb14adb76$$interop$default, 'spectrum-Stepper-button-icon', 'spectrum-Stepper-stepDownIcon'),
    size: "S"
  }), direction === 'down' && scale === 'medium' && /*#__PURE__*/_react.createElement(_spectrumIconsUiChevronDownSmall, {
    UNSAFE_className: classNames($f59dc5c86d09fd6e5e0bfdeb14adb76$$interop$default, 'spectrum-Stepper-button-icon', 'spectrum-Stepper-stepDownIcon')
  })));
}
/**
 * Buttons for NumberField.
 */


let $e8890c86611923a54f7b8663bc47c34$export$StepButton = /*#__PURE__*/_react.forwardRef($e8890c86611923a54f7b8663bc47c34$var$StepButton);

function $ee8e20060759cc50b79d382e771e4d9e$var$NumberField(props, ref) {
  props = useProviderProps(props);
  props = useFormProps(props);
  let provider = useProvider();
  let {
    isQuiet,
    isReadOnly,
    isDisabled,
    hideStepper
  } = props;
  let {
    styleProps: style
  } = useStyleProps(props);
  let {
    locale
  } = useLocale();
  let state = useNumberFieldState(_babelRuntimeHelpersEsmExtends({}, props, {
    locale
  }));
  let inputRef = useRef();
  let domRef = useFocusableRef(ref, inputRef);
  let {
    groupProps,
    labelProps,
    inputProps,
    incrementButtonProps,
    decrementButtonProps
  } = useNumberField(props, state, inputRef);
  let isMobile = provider.scale === 'large';
  let showStepper = !hideStepper;
  let {
    isHovered,
    hoverProps
  } = useHover({
    isDisabled
  });
  let className = classNames($f59dc5c86d09fd6e5e0bfdeb14adb76$$interop$default, 'spectrum-Stepper', {
    'spectrum-Stepper--isQuiet': isQuiet,
    'is-disabled': isDisabled,
    'spectrum-Stepper--readonly': isReadOnly,
    'is-invalid': props.validationState === 'invalid',
    'spectrum-Stepper--showStepper': showStepper,
    'spectrum-Stepper--isMobile': isMobile,
    'is-hovered': isHovered,
    // because FocusRing won't pass along the className from Field, we have to handle that ourselves
    [style.className]: !props.label && style.className
  });
  return /*#__PURE__*/_react.createElement(Field, _babelRuntimeHelpersEsmExtends({}, props, {
    labelProps: labelProps,
    ref: domRef,
    wrapperClassName: classNames($f59dc5c86d09fd6e5e0bfdeb14adb76$$interop$default, 'spectrum-Stepper-container', {
      'spectrum-Stepper-container--isMobile': isMobile
    })
  }), /*#__PURE__*/_react.createElement($ee8e20060759cc50b79d382e771e4d9e$var$NumberFieldInput, _babelRuntimeHelpersEsmExtends({}, props, {
    groupProps: mergeProps(groupProps, hoverProps),
    inputProps: inputProps,
    inputRef: inputRef,
    incrementProps: incrementButtonProps,
    decrementProps: decrementButtonProps,
    className: className,
    style: style
  })));
}

const $ee8e20060759cc50b79d382e771e4d9e$var$NumberFieldInput = /*#__PURE__*/_react.forwardRef(function NumberFieldInput(props, ref) {
  let {
    groupProps,
    inputProps,
    inputRef,
    incrementProps,
    decrementProps,
    className,
    style,
    autoFocus,
    isQuiet,
    hideStepper,
    validationState
  } = props;
  let showStepper = !hideStepper;
  return /*#__PURE__*/_react.createElement(FocusRing, {
    within: true,
    isTextInput: true,
    focusClass: classNames($f59dc5c86d09fd6e5e0bfdeb14adb76$$interop$default, 'is-focused'),
    focusRingClass: classNames($f59dc5c86d09fd6e5e0bfdeb14adb76$$interop$default, 'focus-ring'),
    autoFocus: autoFocus
  }, /*#__PURE__*/_react.createElement("div", _babelRuntimeHelpersEsmExtends({}, groupProps, {
    ref: ref,
    style: style,
    className: className
  }), /*#__PURE__*/_react.createElement(TextFieldBase, {
    UNSAFE_className: classNames($f59dc5c86d09fd6e5e0bfdeb14adb76$$interop$default, 'spectrum-Stepper-field'),
    inputClassName: classNames($f59dc5c86d09fd6e5e0bfdeb14adb76$$interop$default, 'spectrum-Stepper-input'),
    validationIconClassName: classNames($f59dc5c86d09fd6e5e0bfdeb14adb76$$interop$default, 'spectrum-Stepper-icon'),
    isQuiet: isQuiet,
    inputRef: inputRef,
    validationState: validationState,
    inputProps: inputProps
  }), showStepper && /*#__PURE__*/_react.createElement(_react.Fragment, null, /*#__PURE__*/_react.createElement($e8890c86611923a54f7b8663bc47c34$export$StepButton, _babelRuntimeHelpersEsmExtends({
    direction: "up",
    isQuiet: isQuiet
  }, incrementProps)), /*#__PURE__*/_react.createElement($e8890c86611923a54f7b8663bc47c34$export$StepButton, _babelRuntimeHelpersEsmExtends({
    direction: "down",
    isQuiet: isQuiet
  }, decrementProps)))));
});
/**
 * NumberFields allow users to enter a number, and increment or decrement the value using stepper buttons.
 */


export let NumberField = /*#__PURE__*/_react.forwardRef($ee8e20060759cc50b79d382e771e4d9e$var$NumberField);
//# sourceMappingURL=module.js.map
