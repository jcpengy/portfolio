{"mappings":"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","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./node_modules/@adobe/spectrum-css-temp/components/stepper/vars.css","./packages/@react-spectrum/numberfield/src/StepButton.tsx","./packages/@react-spectrum/numberfield/src/NumberField.tsx"],"sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n\nvar $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n@import './index.css';\n@import './skin.css';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport Add from '@spectrum-icons/workflow/Add';\nimport {AriaButtonProps} from '@react-types/button';\nimport ChevronDownSmall from '@spectrum-icons/ui/ChevronDownSmall';\nimport ChevronUpSmall from '@spectrum-icons/ui/ChevronUpSmall';\nimport {classNames} from '@react-spectrum/utils';\nimport {FocusRing} from '@react-aria/focus';\nimport {mergeProps} from '@react-aria/utils';\nimport React, {RefObject} from 'react';\nimport Remove from '@spectrum-icons/workflow/Remove';\nimport stepperStyle from '@adobe/spectrum-css-temp/components/stepper/vars.css';\nimport {useButton} from '@react-aria/button';\nimport {useHover} from '@react-aria/interactions';\nimport {useProvider, useProviderProps} from '@react-spectrum/provider';\n\ninterface StepButtonProps extends AriaButtonProps {\n  isQuiet: boolean,\n  direction: 'up' | 'down'\n}\n\nfunction StepButton(props: StepButtonProps, ref: RefObject<HTMLDivElement>) {\n  props = useProviderProps(props);\n  let {scale} = useProvider();\n  let {direction, isDisabled, isQuiet} = props;\n  /**\n   * Must use div for now because Safari pointer event bugs on disabled form elements.\n   * Link https://bugs.webkit.org/show_bug.cgi?id=219188.\n   */\n  let {buttonProps, isPressed} = useButton({...props, elementType: 'div'}, ref);\n  let {hoverProps, isHovered} = useHover(props);\n  return (\n    <FocusRing focusRingClass={classNames(stepperStyle, 'focus-ring')}>\n      <div\n        className={\n          classNames(\n            stepperStyle,\n            'spectrum-Stepper-button',\n            {\n              'spectrum-Stepper-button--stepUp': direction === 'up',\n              'spectrum-Stepper-button--stepDown': direction === 'down',\n              'spectrum-Stepper-button--isQuiet': isQuiet,\n              'is-hovered': isHovered,\n              'is-active': isPressed,\n              'is-disabled': isDisabled\n            }\n          )\n        }\n        {...mergeProps(hoverProps, buttonProps)}\n        ref={ref}>\n        {direction === 'up' && scale === 'large' &&\n          <Add UNSAFE_className={classNames(stepperStyle, 'spectrum-Stepper-button-icon', 'spectrum-Stepper-stepUpIcon')} size=\"S\" />\n        }\n        {direction === 'up' && scale === 'medium' &&\n          <ChevronUpSmall UNSAFE_className={classNames(stepperStyle, 'spectrum-Stepper-button-icon', 'spectrum-Stepper-stepUpIcon')} />\n        }\n        {direction === 'down' && scale === 'large' &&\n          <Remove UNSAFE_className={classNames(stepperStyle, 'spectrum-Stepper-button-icon', 'spectrum-Stepper-stepDownIcon')} size=\"S\" />\n        }\n        {direction === 'down' && scale === 'medium' &&\n          <ChevronDownSmall UNSAFE_className={classNames(stepperStyle, 'spectrum-Stepper-button-icon', 'spectrum-Stepper-stepDownIcon')} />\n        }\n      </div>\n    </FocusRing>\n  );\n}\n\n/**\n * Buttons for NumberField.\n */\nlet _StepButton = React.forwardRef(StepButton);\nexport {_StepButton as StepButton};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaButtonProps} from '@react-types/button';\nimport {classNames, useFocusableRef, useStyleProps} from '@react-spectrum/utils';\nimport {Field} from '@react-spectrum/label';\nimport {FocusableRef} from '@react-types/shared';\nimport {FocusRing} from '@react-aria/focus';\nimport {mergeProps} from '@react-aria/utils';\nimport React, {HTMLAttributes, InputHTMLAttributes, RefObject, useRef} from 'react';\nimport {SpectrumNumberFieldProps} from '@react-types/numberfield';\nimport {StepButton} from './StepButton';\nimport stepperStyle from '@adobe/spectrum-css-temp/components/stepper/vars.css';\nimport {TextFieldBase} from '@react-spectrum/textfield';\nimport {useFormProps} from '@react-spectrum/form';\nimport {useHover} from '@react-aria/interactions';\nimport {useLocale} from '@react-aria/i18n';\nimport {useNumberField} from '@react-aria/numberfield';\nimport {useNumberFieldState} from '@react-stately/numberfield';\nimport {useProvider, useProviderProps} from '@react-spectrum/provider';\n\nfunction NumberField(props: SpectrumNumberFieldProps, ref: FocusableRef<HTMLElement>) {\n  props = useProviderProps(props);\n  props = useFormProps(props);\n  let provider = useProvider();\n  let {\n    isQuiet,\n    isReadOnly,\n    isDisabled,\n    hideStepper\n  } = props;\n\n  let {styleProps: style} = useStyleProps(props);\n\n  let {locale} = useLocale();\n  let state = useNumberFieldState({...props, locale});\n  let inputRef = useRef<HTMLInputElement>();\n  let domRef = useFocusableRef<HTMLElement>(ref, inputRef);\n  let {\n    groupProps,\n    labelProps,\n    inputProps,\n    incrementButtonProps,\n    decrementButtonProps\n  } = useNumberField(props, state, inputRef);\n  let isMobile = provider.scale === 'large';\n  let showStepper = !hideStepper;\n\n  let {isHovered, hoverProps} = useHover({isDisabled});\n\n  let className =\n    classNames(\n      stepperStyle,\n      'spectrum-Stepper',\n      {\n        'spectrum-Stepper--isQuiet': isQuiet,\n        'is-disabled': isDisabled,\n        'spectrum-Stepper--readonly': isReadOnly,\n        'is-invalid': props.validationState === 'invalid',\n        'spectrum-Stepper--showStepper': showStepper,\n        'spectrum-Stepper--isMobile': isMobile,\n        'is-hovered': isHovered,\n        // because FocusRing won't pass along the className from Field, we have to handle that ourselves\n        [style.className]: !props.label && style.className\n      }\n    );\n\n  return (\n    <Field\n      {...props as Omit<SpectrumNumberFieldProps, 'onChange'>}\n      labelProps={labelProps}\n      ref={domRef}\n      wrapperClassName={classNames(\n        stepperStyle,\n        'spectrum-Stepper-container',\n        {\n          'spectrum-Stepper-container--isMobile': isMobile\n        }\n      )}>\n      <NumberFieldInput\n        {...props}\n        groupProps={mergeProps(groupProps, hoverProps)}\n        inputProps={inputProps}\n        inputRef={inputRef}\n        incrementProps={incrementButtonProps}\n        decrementProps={decrementButtonProps}\n        className={className}\n        style={style} />\n    </Field>\n  );\n}\n\n\ninterface NumberFieldInputProps extends SpectrumNumberFieldProps {\n  groupProps: HTMLAttributes<HTMLDivElement>,\n  inputProps: InputHTMLAttributes<HTMLInputElement>,\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  incrementProps: AriaButtonProps,\n  decrementProps: AriaButtonProps,\n  className?: string,\n  style?: React.CSSProperties\n}\n\nconst NumberFieldInput = React.forwardRef(function NumberFieldInput(props: NumberFieldInputProps, ref: RefObject<HTMLElement>) {\n  let {\n    groupProps,\n    inputProps,\n    inputRef,\n    incrementProps,\n    decrementProps,\n    className,\n    style,\n    autoFocus,\n    isQuiet,\n    hideStepper,\n    validationState\n  } = props;\n  let showStepper = !hideStepper;\n\n  return (\n    <FocusRing\n      within\n      isTextInput\n      focusClass={classNames(stepperStyle, 'is-focused')}\n      focusRingClass={classNames(stepperStyle, 'focus-ring')}\n      autoFocus={autoFocus}>\n      <div\n        {...groupProps}\n        ref={ref as RefObject<HTMLDivElement>}\n        style={style}\n        className={className}>\n        <TextFieldBase\n          UNSAFE_className={\n            classNames(\n              stepperStyle,\n              'spectrum-Stepper-field'\n            )\n          }\n          inputClassName={\n            classNames(\n              stepperStyle,\n              'spectrum-Stepper-input'\n            )\n          }\n          validationIconClassName={\n            classNames(\n              stepperStyle,\n              'spectrum-Stepper-icon'\n            )\n          }\n          isQuiet={isQuiet}\n          inputRef={inputRef}\n          validationState={validationState}\n          inputProps={inputProps} />\n        {showStepper &&\n        <>\n          <StepButton direction=\"up\" isQuiet={isQuiet} {...incrementProps} />\n          <StepButton direction=\"down\" isQuiet={isQuiet} {...decrementProps} />\n        </>\n        }\n      </div>\n    </FocusRing>\n  );\n});\n\n/**\n * NumberFields allow users to enter a number, and increment or decrement the value using stepper buttons.\n */\nlet _NumberField = React.forwardRef(NumberField);\nexport {_NumberField as NumberField};\n"],"names":["$parcel$interopDefault","a","__esModule","default","StepButton","props","ref","useProviderProps","scale","useProvider","direction","isDisabled","isQuiet","buttonProps","isPressed","useButton","elementType","hoverProps","isHovered","useHover","classNames","mergeProps","_StepButton","React","forwardRef","NumberField","useFormProps","provider","isReadOnly","hideStepper","styleProps","style","useStyleProps","locale","useLocale","state","useNumberFieldState","inputRef","useRef","domRef","useFocusableRef","groupProps","labelProps","inputProps","incrementButtonProps","decrementButtonProps","useNumberField","isMobile","showStepper","className","validationState","label","NumberFieldInput","incrementProps","decrementProps","autoFocus","_NumberField"],"version":3,"file":"module.js.map"}