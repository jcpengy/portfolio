{"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,SAASA,sBAAT,CAAgCC,CAAhC,EAAmC;AACjC,SAAOA,CAAC,IAAIA,CAAC,CAACC,UAAP,GAAoBD,CAAC,CAACE,OAAtB,GAAgCF,CAAvC;AACD;;ACkBD,MAAMG,oDAAkB,GAAG;AACzB,UAAQ,SADiB;AAEzB,YAAU,YAFe;AAGzB,cAAY;AAHa,CAA3B;;AAUO,SAASC,cAAT,CAA2BC,KAA3B,EAA2DC,KAA3D,EAAgFC,GAAhF,EAA8H;AACnI,MAAI;AACFC,IAAAA,UADE;AAEFC,IAAAA,WAAW,GAAG;AAFZ,MAGAJ,KAHJ;AAIA,MAAIK,OAAO,GAAG,CAAC,GAAGJ,KAAK,CAACK,UAAN,CAAiBC,OAAjB,EAAJ,CAAd;;AACA,MAAI,CAACF,OAAO,CAACG,IAAR,CAAaC,GAAG,IAAI,CAACR,KAAK,CAACS,YAAN,CAAmBC,GAAnB,CAAuBF,GAAvB,CAArB,CAAL,EAAwD;AACtDN,IAAAA,UAAU,GAAG,IAAb;AACD;;AAED,MAAI;AAACS,IAAAA;AAAD,MAAcC,SAAS,EAA3B;AACA,MAAIC,YAAY,GAAGC,kBAAkB,CAACb,GAAD,CAArC;AACA,MAAIc,aAAa,GAAGJ,SAAS,KAAK,KAAd,IAAuBR,WAAW,KAAK,YAA3D;;AACA,MAAIa,SAAS,GAAIC,CAAD,IAAO;AACrB,QAAI,CAACA,CAAC,CAACC,aAAF,CAAgBC,QAAhB,CAAyBF,CAAC,CAACG,MAA3B,CAAL,EAAyC;AACvC;AACD;;AAED,YAAQH,CAAC,CAACT,GAAV;AACE,WAAK,YAAL;AACA,WAAK,WAAL;AACES,QAAAA,CAAC,CAACI,cAAF;AACAJ,QAAAA,CAAC,CAACK,eAAF;;AACA,YAAIL,CAAC,CAACT,GAAF,KAAU,YAAV,IAA0BO,aAA9B,EAA6C;AAC3CF,UAAAA,YAAY,CAACU,aAAb,CAA2B;AAACC,YAAAA,IAAI,EAAE;AAAP,WAA3B;AACD,SAFD,MAEO;AACLX,UAAAA,YAAY,CAACY,SAAb,CAAuB;AAACD,YAAAA,IAAI,EAAE;AAAP,WAAvB;AACD;;AACD;;AACF,WAAK,WAAL;AACA,WAAK,SAAL;AACEP,QAAAA,CAAC,CAACI,cAAF;AACAJ,QAAAA,CAAC,CAACK,eAAF;;AACA,YAAIL,CAAC,CAACT,GAAF,KAAU,WAAV,IAAyBO,aAA7B,EAA4C;AAC1CF,UAAAA,YAAY,CAACY,SAAb,CAAuB;AAACD,YAAAA,IAAI,EAAE;AAAP,WAAvB;AACD,SAFD,MAEO;AACLX,UAAAA,YAAY,CAACU,aAAb,CAA2B;AAACC,YAAAA,IAAI,EAAE;AAAP,WAA3B;AACD;;AACD;AApBJ;AAsBD,GA3BD;;AA6BA,MAAIE,IAAI,GAAG7B,oDAAkB,CAACG,KAAK,CAAC2B,gBAAN,CAAuBC,aAAxB,CAA7B;AACA,SAAO;AACLC,IAAAA,gBAAgB,kCACXC,cAAc,CAAC/B,KAAD,EAAQ;AAACgC,MAAAA,SAAS,EAAE;AAAZ,KAAR,CADH;AAEdL,MAAAA,IAFc;AAGd,0BAAoBA,IAAI,KAAK,SAAT,GAAqBvB,WAArB,GAAmC,IAHzC;AAId,uBAAiBD,UAJH;AAKdc,MAAAA;AALc;AADX,GAAP;AASD;;;ACzDD,MAAMgB,gDAAY,GAAG;AACnB,UAAQ,IADW;AAEnB,YAAU,OAFS;AAGnB,cAAY;AAHO,CAArB,C,CAMA;;AACO,SAASC,kBAAT,CAA+BlC,KAA/B,EAA4DC,KAA5D,EAAiFC,GAAjF,EAAoI;AACzI,MAAI2B,aAAa,GAAG5B,KAAK,CAAC2B,gBAAN,CAAuBC,aAA3C;AACA,MAAIM,WAAW,GAAG;AAChBR,IAAAA,IAAI,EAAEM,gDAAY,CAACJ,aAAD;AADF,GAAlB;;AAIA,MAAIA,aAAa,KAAK,MAAtB,EAA8B;AAC5B,QAAIO,UAAU,GAAGnC,KAAK,CAAC2B,gBAAN,CAAuBQ,UAAvB,CAAkCpC,KAAK,CAACS,GAAxC,CAAjB;AACA0B,IAAAA,WAAW,CAAC,cAAD,CAAX,GAA8BC,UAA9B;AACD;;AAED,MAAIC,SAAS,GAAGrC,KAAK,CAACS,GAAN,KAAcR,KAAK,CAAC2B,gBAAN,CAAuBU,UAArD;AACA,MAAIC,UAAU,GAAGC,MAAM,CAAC;AAACH,IAAAA,SAAD;AAAYpC,IAAAA;AAAZ,GAAD,CAAvB;AACAsC,EAAAA,UAAU,CAACE,OAAX,GAAqB;AAACJ,IAAAA,SAAD;AAAYpC,IAAAA;AAAZ,GAArB,CAbyI,CAezI;AACA;;AACAyC,EAAAA,SAAS,CAAC,MAAM;AACd,WAAO,MAAM;AACX,UAAIH,UAAU,CAACE,OAAX,CAAmBJ,SAAvB,EAAkC;AAChCE,QAAAA,UAAU,CAACE,OAAX,CAAmBxC,KAAnB,CAAyB2B,gBAAzB,CAA0Ce,aAA1C,CAAwD,IAAxD;AACD;AACF,KAJD;AAKD,GANQ,EAMN,EANM,CAAT;AAQA,SAAO;AACLR,IAAAA,WAAW,EAAES,UAAU,CAACT,WAAD,EAAc;AACnCU,MAAAA,QAAQ,EAAER,SAAS,IAAIpC,KAAK,CAAC2B,gBAAN,CAAuBU,UAAvB,IAAqC,IAAlD,GAAyD,CAAzD,GAA6D,CAAC,CADrC;;AAEnCQ,MAAAA,OAAO,GAAG;AACR7C,QAAAA,KAAK,CAAC2B,gBAAN,CAAuBe,aAAvB,CAAqC3C,KAAK,CAACS,GAA3C;AACD,OAJkC;;AAKnCsC,MAAAA,OAAO,GAAG;AACR9C,QAAAA,KAAK,CAAC2B,gBAAN,CAAuBoB,MAAvB,CAA8BhD,KAAK,CAACS,GAApC;AACD;;AAPkC,KAAd;AADlB,GAAP;AAWD","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./packages/@react-aria/actiongroup/src/useActionGroup.ts","./packages/@react-aria/actiongroup/src/useActionGroupItem.ts"],"sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n\nvar $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaActionGroupProps} from '@react-types/actiongroup';\nimport {createFocusManager} from '@react-aria/focus';\nimport {filterDOMProps} from '@react-aria/utils';\nimport {HTMLAttributes, RefObject} from 'react';\nimport {ListState} from '@react-stately/list';\nimport {Orientation} from '@react-types/shared';\nimport {useLocale} from '@react-aria/i18n';\n\nconst BUTTON_GROUP_ROLES = {\n  'none': 'toolbar',\n  'single': 'radiogroup',\n  'multiple': 'toolbar'\n};\n\nexport interface ActionGroupAria {\n  actionGroupProps: HTMLAttributes<HTMLElement>\n}\n\nexport function useActionGroup<T>(props: AriaActionGroupProps<T>, state: ListState<T>, ref: RefObject<HTMLElement>): ActionGroupAria {\n  let {\n    isDisabled,\n    orientation = 'horizontal' as Orientation\n  } = props;\n  let allKeys = [...state.collection.getKeys()];\n  if (!allKeys.some(key => !state.disabledKeys.has(key))) {\n    isDisabled = true;\n  }\n\n  let {direction} = useLocale();\n  let focusManager = createFocusManager(ref);\n  let flipDirection = direction === 'rtl' && orientation === 'horizontal';\n  let onKeyDown = (e) => {\n    if (!e.currentTarget.contains(e.target)) {\n      return;\n    }\n\n    switch (e.key) {\n      case 'ArrowRight':\n      case 'ArrowDown':\n        e.preventDefault();\n        e.stopPropagation();\n        if (e.key === 'ArrowRight' && flipDirection) {\n          focusManager.focusPrevious({wrap: true});\n        } else {\n          focusManager.focusNext({wrap: true});\n        }\n        break;\n      case 'ArrowLeft':\n      case 'ArrowUp':\n        e.preventDefault();\n        e.stopPropagation();\n        if (e.key === 'ArrowLeft' && flipDirection) {\n          focusManager.focusNext({wrap: true});\n        } else {\n          focusManager.focusPrevious({wrap: true});\n        }\n        break;\n    }\n  };\n\n  let role = BUTTON_GROUP_ROLES[state.selectionManager.selectionMode];\n  return {\n    actionGroupProps: {\n      ...filterDOMProps(props, {labelable: true}),\n      role,\n      'aria-orientation': role === 'toolbar' ? orientation : null,\n      'aria-disabled': isDisabled,\n      onKeyDown\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {HTMLAttributes, Key, RefObject, useEffect, useRef} from 'react';\nimport {ListState} from '@react-stately/list';\nimport {mergeProps} from '@react-aria/utils';\nimport {PressProps} from '@react-aria/interactions';\n\ninterface ActionGroupItemProps {\n  key: Key\n}\n\ninterface ActionGroupItemAria {\n  buttonProps: HTMLAttributes<HTMLElement> & PressProps\n}\n\nconst BUTTON_ROLES = {\n  'none': null,\n  'single': 'radio',\n  'multiple': 'checkbox'\n};\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function useActionGroupItem<T>(props: ActionGroupItemProps, state: ListState<T>, ref?: RefObject<HTMLElement>): ActionGroupItemAria {\n  let selectionMode = state.selectionManager.selectionMode;\n  let buttonProps = {\n    role: BUTTON_ROLES[selectionMode]\n  };\n\n  if (selectionMode !== 'none') {\n    let isSelected = state.selectionManager.isSelected(props.key);\n    buttonProps['aria-checked'] = isSelected;\n  }\n\n  let isFocused = props.key === state.selectionManager.focusedKey;\n  let lastRender = useRef({isFocused, state});\n  lastRender.current = {isFocused, state};\n\n  // If the focused item is removed from the DOM, reset the focused key to null.\n  // eslint-disable-next-line arrow-body-style\n  useEffect(() => {\n    return () => {\n      if (lastRender.current.isFocused) {\n        lastRender.current.state.selectionManager.setFocusedKey(null);\n      }\n    };\n  }, []);\n\n  return {\n    buttonProps: mergeProps(buttonProps, {\n      tabIndex: isFocused || state.selectionManager.focusedKey == null ? 0 : -1,\n      onFocus() {\n        state.selectionManager.setFocusedKey(props.key);\n      },\n      onPress() {\n        state.selectionManager.select(props.key);\n      }\n    })\n  };\n}\n"],"names":["$parcel$interopDefault","a","__esModule","default","BUTTON_GROUP_ROLES","useActionGroup","props","state","ref","isDisabled","orientation","allKeys","collection","getKeys","some","key","disabledKeys","has","direction","useLocale","focusManager","createFocusManager","flipDirection","onKeyDown","e","currentTarget","contains","target","preventDefault","stopPropagation","focusPrevious","wrap","focusNext","role","selectionManager","selectionMode","actionGroupProps","filterDOMProps","labelable","BUTTON_ROLES","useActionGroupItem","buttonProps","isSelected","isFocused","focusedKey","lastRender","useRef","current","useEffect","setFocusedKey","mergeProps","tabIndex","onFocus","onPress","select"],"version":3,"file":"main.js.map"}