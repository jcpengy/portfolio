{"mappings":"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","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./packages/@react-aria/i18n/src/utils.ts","./packages/@react-aria/i18n/src/useDefaultLocale.ts","./packages/@react-aria/i18n/src/context.tsx","./packages/@react-aria/i18n/src/useMessageFormatter.ts","./packages/@react-aria/i18n/src/useDateFormatter.ts","./packages/@react-aria/i18n/src/useNumberParser.ts","./packages/@react-aria/i18n/src/useNumberFormatter.ts","./packages/@react-aria/i18n/src/useCollator.ts","./packages/@react-aria/i18n/src/useFilter.ts"],"sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n\nvar $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// https://en.wikipedia.org/wiki/Right-to-left\nconst RTL_SCRIPTS = new Set(['Arab', 'Syrc', 'Samr', 'Mand', 'Thaa', 'Mend', 'Nkoo', 'Adlm', 'Rohg', 'Hebr']);\nconst RTL_LANGS = new Set(['ae', 'ar', 'arc', 'bcc', 'bqi', 'ckb', 'dv', 'fa', 'glk', 'he', 'ku', 'mzn', 'nqo', 'pnb', 'ps', 'sd', 'ug', 'ur', 'yi']);\n\n/**\n * Determines if a locale is read right to left using [Intl.Locale]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale}.\n */\nexport function isRTL(locale: string) {\n  // If the Intl.Locale API is available, use it to get the script for the locale.\n  // This is more accurate than guessing by language, since languages can be written in multiple scripts.\n  // @ts-ignore\n  if (Intl.Locale) {\n    // @ts-ignore\n    let script = new Intl.Locale(locale).maximize().script;\n    return RTL_SCRIPTS.has(script);\n  }\n\n  // If not, just guess by the language (first part of the locale)\n  let lang = locale.split('-')[0];\n  return RTL_LANGS.has(lang);\n}\n\nexport function numberFormatSignDisplayPolyfill(numberFormat: Intl.NumberFormat, signDisplay: 'always' | 'exceptZero' | 'auto' | 'never', num: number) {\n  if (signDisplay === 'auto') {\n    return numberFormat.format(num);\n  } else if (signDisplay === 'never') {\n    return numberFormat.format(Math.abs(num));\n  } else {\n    let needsPositiveSign = false;\n    if (signDisplay === 'always') {\n      needsPositiveSign = num > 0 || Object.is(num, 0);\n    } else if (signDisplay === 'exceptZero') {\n      if (Object.is(num, -0) || Object.is(num, 0)) {\n        num = Math.abs(num);\n      } else {\n        needsPositiveSign = num > 0;\n      }\n    }\n\n    if (needsPositiveSign) {\n      let negative = numberFormat.format(-num);\n      let noSign = numberFormat.format(num);\n      // ignore RTL/LTR marker character\n      let minus = negative.replace(noSign, '').replace(/\\u200e|\\u061C/, '');\n      if ([...minus].length !== 1) {\n        console.warn('@react-aria/i18n polyfill for NumberFormat signDisplay: Unsupported case');\n      }\n      let positive = negative.replace(noSign, '!!!').replace(minus, '+').replace('!!!', noSign);\n      return positive;\n    } else {\n      return numberFormat.format(num);\n    }\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Direction} from '@react-types/shared';\nimport {isRTL} from './utils';\nimport {useEffect, useState} from 'react';\nimport {useIsSSR} from '@react-aria/ssr';\n\nexport interface Locale {\n  /** The [BCP47](https://www.ietf.org/rfc/bcp/bcp47.txt) language code for the locale. */\n  locale: string,\n  /** The writing direction for the locale. */\n  direction: Direction\n}\n\n/**\n * Gets the locale setting of the browser.\n */\nexport function getDefaultLocale(): Locale {\n  // @ts-ignore\n  let locale = (typeof navigator !== 'undefined' && (navigator.language || navigator.userLanguage)) || 'en-US';\n  return {\n    locale,\n    direction: isRTL(locale) ? 'rtl' : 'ltr'\n  };\n}\n\nlet currentLocale = getDefaultLocale();\nlet listeners = new Set<(locale: Locale) => void>();\n\nfunction updateLocale() {\n  currentLocale = getDefaultLocale();\n  for (let listener of listeners) {\n    listener(currentLocale);\n  }\n}\n\n/**\n * Returns the current browser/system language, and updates when it changes.\n */\nexport function useDefaultLocale(): Locale {\n  let isSSR = useIsSSR();\n  let [defaultLocale, setDefaultLocale] = useState(currentLocale);\n\n  useEffect(() => {\n    if (listeners.size === 0) {\n      window.addEventListener('languagechange', updateLocale);\n    }\n\n    listeners.add(setDefaultLocale);\n\n    return () => {\n      listeners.delete(setDefaultLocale);\n      if (listeners.size === 0) {\n        window.removeEventListener('languagechange', updateLocale);\n      }\n    };\n  }, []);\n\n  // We cannot determine the browser's language on the server, so default to\n  // en-US. This will be updated after hydration on the client to the correct value.\n  if (isSSR) {\n    return {\n      locale: 'en-US',\n      direction: 'ltr'\n    };\n  }\n\n  return defaultLocale;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {isRTL} from './utils';\nimport {Locale, useDefaultLocale} from './useDefaultLocale';\nimport React, {ReactNode, useContext} from 'react';\n\ninterface ProviderProps {\n  /** Contents that should have the locale applied. */\n  children: ReactNode,\n  /** The locale to apply to the children. */\n  locale?: string\n}\n\nconst I18nContext = React.createContext<Locale>(null);\n\n/**\n * Provides the locale for the application to all child components.\n */\nexport function I18nProvider(props: ProviderProps) {\n  let {locale, children} = props;\n  let defaultLocale = useDefaultLocale();\n\n  let value: Locale = locale ? {\n    locale,\n    direction: isRTL(locale) ? 'rtl' : 'ltr'\n  } : defaultLocale;\n\n  return (\n    <I18nContext.Provider value={value}>\n      {children}\n    </I18nContext.Provider>\n  );\n}\n\n/**\n * Returns the current locale and layout direction.\n */\nexport function useLocale(): Locale {\n  let defaultLocale = useDefaultLocale();\n  let context = useContext(I18nContext);\n  return context || defaultLocale;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport IntlMessageFormat from 'intl-messageformat';\nimport {useLocale} from './context';\n\ntype MessageFormatterStrings = {\n  [lang: string]: {\n    [key: string]: string\n  }\n};\n\ntype FormatMessage = (key: string, variables?: {[key: string]: any}) => string;\n\nconst formatterCache = new Map();\n\n/**\n * Handles formatting ICU Message strings to create localized strings for the current locale.\n * Automatically updates when the locale changes, and handles caching of messages for performance.\n * @param strings - A mapping of languages to strings by key.\n */\nexport function useMessageFormatter(strings: MessageFormatterStrings): FormatMessage {\n  let {locale: currentLocale} = useLocale();\n\n  // Check the cache\n  let localeCache = formatterCache.get(strings);\n  if (localeCache && localeCache.has(currentLocale)) {\n    return localeCache.get(currentLocale);\n  }\n\n  // Add to the formatter cache if needed\n  if (!localeCache) {\n    localeCache = new Map();\n    formatterCache.set(strings, localeCache);\n  }\n\n  // Get the strings for the current locale\n  let localeStrings = selectLocale(strings, currentLocale);\n\n  // Create a new message formatter\n  let cache = {};\n  let formatMessage = (key, variables) => {\n    let message = cache[key + '.' + currentLocale];\n    if (!message) {\n      let msg = localeStrings[key];\n      if (!msg) {\n        throw new Error(`Could not find intl message ${key} in ${currentLocale} locale`);\n      }\n\n      message = new IntlMessageFormat(msg, currentLocale);\n      cache[key] = message;\n    }\n\n    return message.format(variables);\n  };\n\n  localeCache.set(currentLocale, formatMessage);\n  return formatMessage;\n}\n\nfunction selectLocale(strings, locale) {\n  // If there is an exact match, use it.\n  if (strings[locale]) {\n    return strings[locale];\n  }\n\n  // Attempt to find the closest match by language.\n  // For example, if the locale is fr-CA (French Canadian), but there is only\n  // an fr-FR (France) set of strings, use that.\n  let language = getLanguage(locale);\n  for (let key in strings) {\n    if (key.startsWith(language + '-')) {\n      return strings[key];\n    }\n  }\n\n  // Nothing close, use english.\n  return strings['en-US'];\n}\n\nfunction getLanguage(locale) {\n  // @ts-ignore\n  if (Intl.Locale) {\n    // @ts-ignore\n    return new Intl.Locale(locale).language;\n  }\n\n  return locale.split('-')[0];\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {useLocale} from './context';\n\nlet formatterCache = new Map<string, Intl.DateTimeFormat>();\n\n/**\n * Provides localized date formatting for the current locale. Automatically updates when the locale changes,\n * and handles caching of the date formatter for performance.\n * @param options - Formatting options.\n */\nexport function useDateFormatter(options?: Intl.DateTimeFormatOptions): Intl.DateTimeFormat {\n  let {locale} = useLocale();\n\n  let cacheKey = locale + (options ? Object.entries(options).sort((a, b) => a[0] < b[0] ? -1 : 1).join() : '');\n  if (formatterCache.has(cacheKey)) {\n    return formatterCache.get(cacheKey);\n  }\n\n  let formatter = new Intl.DateTimeFormat(locale, options);\n  formatterCache.set(cacheKey, formatter);\n  return formatter;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {useCallback, useEffect, useRef} from 'react';\nimport {useLocale} from './context';\n\ntype NumberParser = {\n  parse: (value:string) => number\n}\n\n/**\n * Provides localized number parsing for the current locale.\n * Idea from https://observablehq.com/@mbostock/localized-number-parsing.\n */\nexport function useNumberParser(): NumberParser {\n  let {locale} = useLocale();\n  const numberData = useRef({group: null, decimal: null, numeral: null, index: null});\n\n  useEffect(() => {\n    const parts = new Intl.NumberFormat(locale).formatToParts(12345.6);\n    const numerals = [...new Intl.NumberFormat(locale, {useGrouping: false}).format(9876543210)].reverse();\n    const index = new Map(numerals.map((d, i) => [d, i]));\n    \n    numberData.current.group = new RegExp(`[${parts.find(d => d.type === 'group').value}]`, 'g');\n    numberData.current.decimal = new RegExp(`[${parts.find(d => d.type === 'decimal').value}]`);\n    numberData.current.numeral = new RegExp(`[${numerals.join('')}]`, 'g');\n    numberData.current.index = d => index.get(d);\n  },  [locale]);\n\n  const parse = useCallback((value:string) => {\n    value = value.trim()\n      .replace(numberData.current.group, '')\n      .replace(numberData.current.decimal, '.')\n      .replace(numberData.current.numeral, numberData.current.index);\n    return value ? +value : NaN;\n  }, []);\n\n  return  {parse};\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {numberFormatSignDisplayPolyfill} from './utils';\nimport {useLocale} from './context';\n\nlet formatterCache = new Map<string, Intl.NumberFormat>();\n\nlet supportsSignDisplay = false;\ntry {\n  // @ts-ignore\n  supportsSignDisplay = (new Intl.NumberFormat('de-DE', {signDisplay: 'exceptZero'})).resolvedOptions().signDisplay === 'exceptZero';\n  // eslint-disable-next-line no-empty\n} catch (e) {}\n\n/**\n * Provides localized number formatting for the current locale. Automatically updates when the locale changes,\n * and handles caching of the number formatter for performance.\n * @param options - Formatting options.\n */\nexport function useNumberFormatter(options?: Intl.NumberFormatOptions): Intl.NumberFormat {\n  let {locale} = useLocale();\n\n  let cacheKey = locale + (options ? Object.entries(options).sort((a, b) => a[0] < b[0] ? -1 : 1).join() : '');\n  if (formatterCache.has(cacheKey)) {\n    return formatterCache.get(cacheKey);\n  }\n\n  let numberFormatter = new Intl.NumberFormat(locale, options);\n  // @ts-ignore\n  let {signDisplay} = options || {};\n  formatterCache.set(cacheKey, (!supportsSignDisplay && signDisplay != null) ? new Proxy(numberFormatter, {\n    get(target, property) {\n      if (property === 'format') {\n        return (v) => numberFormatSignDisplayPolyfill(numberFormatter, signDisplay, v);\n      } else {\n        return target[property];\n      }\n    }\n  }) : numberFormatter);\n  return numberFormatter;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {useLocale} from './context';\n\nlet cache = new Map<string, Intl.Collator>();\n\n/**\n * Provides localized string collation for the current locale. Automatically updates when the locale changes,\n * and handles caching of the collator for performance.\n * @param options - Collator options.\n */\nexport function useCollator(options?: Intl.CollatorOptions): Intl.Collator {\n  let {locale} = useLocale();\n\n  let cacheKey = locale + (options ? Object.entries(options).sort((a, b) => a[0] < b[0] ? -1 : 1).join() : '');\n  if (cache.has(cacheKey)) {\n    return cache.get(cacheKey);\n  }\n\n  let formatter = new Intl.Collator(locale, options);\n  cache.set(cacheKey, formatter);\n  return formatter;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {useCollator} from './useCollator';\n\ninterface Filter {\n  /** Returns whether a string starts with a given substring. */\n  startsWith(string: string, substring: string): boolean,\n  /** Returns whether a string ends with a given substring. */\n  endsWith(string: string, substring: string): boolean,\n  /** Returns whether a string contains a given substring. */\n  contains(string: string, substring: string): boolean\n}\n\n/**\n * Provides localized string search functionality that is useful for filtering or matching items\n * in a list. Options can be provided to adjust the sensitivity to case, diacritics, and other parameters.\n */\nexport function useFilter(options?: Intl.CollatorOptions): Filter {\n  let collator = useCollator({\n    usage: 'search',\n    ...options\n  });\n\n  // TODO(later): these methods don't currently support the ignorePunctuation option.\n\n  return {\n    startsWith(string, substring) {\n      if (substring.length === 0) {\n        return true;\n      }\n\n      // Normalize both strings so we can slice safely\n      // TODO: take into account the ignorePunctuation option as well...\n      string = string.normalize('NFC');\n      substring = substring.normalize('NFC');\n      return collator.compare(string.slice(0, substring.length), substring) === 0;\n    },\n    endsWith(string, substring) {\n      if (substring.length === 0) {\n        return true;\n      }\n\n      string = string.normalize('NFC');\n      substring = substring.normalize('NFC');\n      return collator.compare(string.slice(-substring.length), substring) === 0;\n    },\n    contains(string, substring) {\n      if (substring.length === 0) {\n        return true;\n      }\n\n      string = string.normalize('NFC');\n      substring = substring.normalize('NFC');\n\n      let scan = 0;\n      let sliceLen = substring.length;\n      for (; scan + sliceLen <= string.length; scan++) {\n        let slice = string.slice(scan, scan + sliceLen);\n        if (collator.compare(substring, slice) === 0) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  };\n}\n"],"names":["$parcel$interopDefault","a","__esModule","default","RTL_SCRIPTS","Set","RTL_LANGS","isRTL","locale","Intl","Locale","script","maximize","has","lang","split","numberFormatSignDisplayPolyfill","numberFormat","signDisplay","num","format","Math","abs","needsPositiveSign","Object","is","negative","noSign","minus","replace","length","console","warn","positive","getDefaultLocale","navigator","language","userLanguage","direction","currentLocale","listeners","updateLocale","listener","useDefaultLocale","isSSR","useIsSSR","defaultLocale","setDefaultLocale","useState","useEffect","size","window","addEventListener","add","delete","removeEventListener","I18nContext","React","createContext","I18nProvider","props","children","value","useLocale","context","useContext","formatterCache","Map","useMessageFormatter","strings","localeCache","get","set","localeStrings","selectLocale","cache","formatMessage","key","variables","message","msg","Error","IntlMessageFormat","getLanguage","startsWith","useDateFormatter","options","cacheKey","entries","sort","b","join","formatter","DateTimeFormat","useNumberParser","numberData","useRef","group","decimal","numeral","index","parts","NumberFormat","formatToParts","numerals","useGrouping","reverse","map","d","i","current","RegExp","find","type","parse","useCallback","trim","NaN","supportsSignDisplay","resolvedOptions","e","useNumberFormatter","numberFormatter","Proxy","target","property","v","useCollator","Collator","useFilter","collator","usage","string","substring","normalize","compare","slice","endsWith","contains","scan","sliceLen"],"version":3,"file":"main.js.map"}