{"mappings":"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","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./packages/@react-aria/tabs/src/utils.ts","./packages/@react-aria/tabs/src/useTab.ts","./packages/@react-aria/tabs/src/useTabPanel.ts","./packages/@react-aria/tabs/src/TabsKeyboardDelegate.ts","./packages/@react-aria/tabs/src/useTabList.ts"],"sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n\nvar $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Key} from 'react';\nimport {TabListState} from '@react-stately/tabs';\n\nexport const tabsIds = new WeakMap<TabListState<unknown>, string>();\n\nexport function generateId<T>(state: TabListState<T>, key: Key, role: string) {\n  if (typeof key === 'string') {\n    key = key.replace(/\\s+/g, '');\n  }\n\n  let baseId = tabsIds.get(state);\n  return `${baseId}-${role}-${key}`;\n}\n\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaTabProps} from '@react-types/tabs';\nimport {generateId} from './utils';\nimport {HTMLAttributes, RefObject} from 'react';\nimport {TabListState} from '@react-stately/tabs';\nimport {usePress} from '@react-aria/interactions';\nimport {useSelectableItem} from '@react-aria/selection';\n\ninterface TabAria {\n  /** Props for the tab element. */\n  tabProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Provides the behavior and accessibility implementation for a tab.\n * When selected, the associated tab panel is shown.\n */\nexport function useTab<T>(\n  props: AriaTabProps,\n  state: TabListState<T>,\n  ref: RefObject<HTMLElement>\n): TabAria {\n  let {key, isDisabled: propsDisabled} = props;\n  let {selectionManager: manager, selectedKey} = state;\n\n  let isSelected = key === selectedKey;\n\n  let {itemProps} = useSelectableItem({\n    selectionManager: manager,\n    key,\n    ref\n  });\n  let isDisabled = propsDisabled || state.disabledKeys.has(key);\n\n  let {pressProps} = usePress({...itemProps, isDisabled});\n  let tabId = generateId(state, key, 'tab');\n  let tabPanelId = generateId(state, key, 'tabpanel');\n  let {tabIndex} = pressProps;\n\n  return {\n    tabProps: {\n      ...pressProps,\n      id: tabId,\n      'aria-selected': isSelected,\n      'aria-disabled': isDisabled || undefined,\n      'aria-controls': isSelected ? tabPanelId : undefined,\n      tabIndex: isDisabled ? undefined : tabIndex,\n      role: 'tab'\n    }\n  };\n}\n\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaTabPanelProps} from '@react-types/tabs';\nimport {generateId} from './utils';\nimport {getFocusableTreeWalker} from '@react-aria/focus';\nimport {HTMLAttributes, RefObject, useLayoutEffect, useState} from 'react';\nimport {mergeProps, useLabels} from '@react-aria/utils';\nimport {TabListState} from '@react-stately/tabs';\n\ninterface TabPanelAria {\n  /** Props for the tab panel element. */\n  tabPanelProps: HTMLAttributes<HTMLElement>\n}\n\n\n/**\n * Provides the behavior and accessibility implementation for a tab panel. A tab panel is a container for\n * the contents of a tab, and is shown when the tab is selected.\n */\nexport function useTabPanel<T>(props: AriaTabPanelProps, state: TabListState<T>, ref: RefObject<HTMLElement>): TabPanelAria {\n  let [tabIndex, setTabIndex] = useState(0);\n\n  // The tabpanel should have tabIndex=0 when there are no tabbable elements within it.\n  // Otherwise, tabbing from the focused tab should go directly to the first tabbable element\n  // within the tabpanel.\n  useLayoutEffect(() => {\n    if (ref?.current) {\n      let update = () => {\n        // Detect if there are any tabbable elements and update the tabIndex accordingly.\n        let walker = getFocusableTreeWalker(ref.current, {tabbable: true});\n        setTabIndex(walker.nextNode() ? undefined : 0);\n      };\n\n      update();\n\n      // Update when new elements are inserted, or the tabIndex/disabled attribute updates.\n      let observer = new MutationObserver(update);\n      observer.observe(ref.current, {\n        subtree: true,\n        childList: true,\n        attributes: true,\n        attributeFilter: ['tabIndex', 'disabled']\n      });\n\n      return () => {\n        observer.disconnect();\n      };\n    }\n  }, [ref]);\n\n  const id = generateId(state, state?.selectedKey, 'tabpanel');\n  const tabPanelProps = useLabels({...props, id, 'aria-labelledby': generateId(state, state?.selectedKey, 'tab')});\n\n  return {\n    tabPanelProps: mergeProps(tabPanelProps, {\n      tabIndex,\n      role: 'tabpanel',\n      'aria-describedby': props['aria-describedby'],\n      'aria-details': props['aria-details']\n    })\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Collection, Direction, KeyboardDelegate, Orientation} from '@react-types/shared';\nimport {Key} from 'react';\n\nexport class TabsKeyboardDelegate<T> implements KeyboardDelegate {\n  private collection: Collection<T>;\n  private flipDirection: boolean;\n  private disabledKeys: Set<Key>;\n  private orientation: Orientation;\n\n  constructor(collection: Collection<T>, direction: Direction, orientation: Orientation, disabledKeys: Set<Key> = new Set()) {\n    this.collection = collection;\n    this.flipDirection = direction === 'rtl' && orientation === 'horizontal';\n    this.orientation = orientation;\n    this.disabledKeys = disabledKeys;\n  }\n\n  getKeyLeftOf(key: Key) {\n    if (this.flipDirection) {\n      return this.getNextKey(key);\n    } else {\n      if (this.orientation === 'horizontal') {\n        return this.getPreviousKey(key);\n      }\n      return null;\n    }\n  }\n\n  getKeyRightOf(key: Key) {\n    if (this.flipDirection) {\n      return this.getPreviousKey(key);\n    } else {\n      if (this.orientation === 'horizontal') {\n        return this.getNextKey(key);\n      }\n      return null;\n    }\n  }\n\n  getKeyAbove(key: Key) {\n    if (this.orientation === 'vertical') {\n      return this.getPreviousKey(key);\n    }\n    return null;\n  }\n\n  getKeyBelow(key: Key) {\n    if (this.orientation === 'vertical') {\n      return this.getNextKey(key);\n    }\n    return null;\n  }\n\n  getFirstKey() {\n    let key = this.collection.getFirstKey();\n    if (this.disabledKeys.has(key)) {\n      key = this.getNextKey(key);\n    }\n    return key;\n  }\n\n  getLastKey() {\n    let key = this.collection.getLastKey();\n    if (this.disabledKeys.has(key)) {\n      key = this.getPreviousKey(key);\n    }\n    return key;\n  }\n\n  getNextKey(key) {\n    do {\n      key = this.collection.getKeyAfter(key);\n      if (key == null) {\n        key = this.collection.getFirstKey();\n      }\n    } while (this.disabledKeys.has(key));\n    return key;\n  }\n\n  getPreviousKey(key) {\n    do {\n      key = this.collection.getKeyBefore(key);\n      if (key == null) {\n        key = this.collection.getLastKey();\n      }\n    } while (this.disabledKeys.has(key));\n    return key;\n  }\n}\n","/*\n* Copyright 2020 Adobe. All rights reserved.\n* This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License. You may obtain a copy\n* of the License at http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software distributed under\n* the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n* OF ANY KIND, either express or implied. See the License for the specific language\n* governing permissions and limitations under the License.\n*/\n\nimport {AriaTabListProps} from '@react-types/tabs';\nimport {HTMLAttributes, RefObject, useMemo} from 'react';\nimport {mergeProps, useId, useLabels} from '@react-aria/utils';\nimport {TabListState} from '@react-stately/tabs';\nimport {tabsIds} from './utils';\nimport {TabsKeyboardDelegate} from './TabsKeyboardDelegate';\nimport {useLocale} from '@react-aria/i18n';\nimport {useSelectableCollection} from '@react-aria/selection';\n\ninterface TabListAria {\n  /** Props for the tablist container. */\n  tabListProps: HTMLAttributes<HTMLElement>\n}\n\n\n/**\n * Provides the behavior and accessibility implementation for a tab list.\n * Tabs organize content into multiple sections and allow users to navigate between them.\n */\nexport function useTabList<T>(props: AriaTabListProps<T>, state: TabListState<T>, ref: RefObject<HTMLElement>): TabListAria {\n  let {\n    orientation = 'horizontal',\n    keyboardActivation = 'automatic'\n  } = props;\n  let {\n    collection,\n    selectionManager: manager,\n    disabledKeys\n  } = state;\n  let {direction} = useLocale();\n  let delegate = useMemo(() => new TabsKeyboardDelegate(\n    collection,\n    direction,\n    orientation,\n    disabledKeys), [collection, disabledKeys, orientation, direction]);\n\n  let {collectionProps} = useSelectableCollection({\n    ref,\n    selectionManager: manager,\n    keyboardDelegate: delegate,\n    selectOnFocus: keyboardActivation === 'automatic',\n    disallowEmptySelection: true\n  });\n\n  // Compute base id for all tabs\n  let tabsId = useId();\n  tabsIds.set(state, tabsId);\n\n  let tabListLabelProps = useLabels({...props, id: tabsId});\n\n  return {\n    tabListProps: {\n      ...mergeProps(collectionProps, tabListLabelProps),\n      role: 'tablist',\n      'aria-orientation': orientation,\n      tabIndex: undefined\n    }\n  };\n}\n"],"names":["$parcel$interopDefault","a","__esModule","default","tabsIds","WeakMap","generateId","state","key","role","replace","baseId","get","useTab","props","ref","isDisabled","propsDisabled","selectionManager","manager","selectedKey","isSelected","itemProps","useSelectableItem","disabledKeys","has","pressProps","usePress","tabId","tabPanelId","tabIndex","tabProps","id","undefined","useTabPanel","setTabIndex","useState","useLayoutEffect","current","update","walker","getFocusableTreeWalker","tabbable","nextNode","observer","MutationObserver","observe","subtree","childList","attributes","attributeFilter","disconnect","tabPanelProps","useLabels","mergeProps","TabsKeyboardDelegate","constructor","collection","direction","orientation","Set","flipDirection","getKeyLeftOf","getNextKey","getPreviousKey","getKeyRightOf","getKeyAbove","getKeyBelow","getFirstKey","getLastKey","getKeyAfter","getKeyBefore","useTabList","keyboardActivation","useLocale","delegate","useMemo","collectionProps","useSelectableCollection","keyboardDelegate","selectOnFocus","disallowEmptySelection","tabsId","useId","set","tabListLabelProps","tabListProps"],"version":3,"file":"main.js.map"}