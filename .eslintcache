[{"/Users/jesspeng/Documents/portfolio/src/index.js":"1","/Users/jesspeng/Documents/portfolio/src/App.js":"2","/Users/jesspeng/Documents/portfolio/src/components/Portfolio.js":"3","/Users/jesspeng/Documents/portfolio/src/components/About.js":"4","/Users/jesspeng/Documents/portfolio/src/components/Home.js":"5","/Users/jesspeng/Documents/portfolio/src/components/GraphicDesign.js":"6","/Users/jesspeng/Documents/portfolio/src/components/Title.js":"7","/Users/jesspeng/Documents/portfolio/src/components/Contact.js":"8","/Users/jesspeng/Documents/portfolio/src/components/UXDesign.js":"9","/Users/jesspeng/Documents/portfolio/src/components/Footer.js":"10"},{"size":213,"mtime":1685739592662,"results":"11","hashOfConfig":"12"},{"size":2553,"mtime":1685739592090,"results":"13","hashOfConfig":"12"},{"size":2897,"mtime":1685739727544,"results":"14","hashOfConfig":"12"},{"size":1701,"mtime":1685739592657,"results":"15","hashOfConfig":"12"},{"size":3750,"mtime":1685739592658,"results":"16","hashOfConfig":"12"},{"size":1623,"mtime":1685739592658,"results":"17","hashOfConfig":"12"},{"size":845,"mtime":1685739592660,"results":"18","hashOfConfig":"12"},{"size":1739,"mtime":1685739592657,"results":"19","hashOfConfig":"12"},{"size":8657,"mtime":1685739727536,"results":"20","hashOfConfig":"12"},{"size":1118,"mtime":1685739592658,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ucjkdp",{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jesspeng/Documents/portfolio/src/index.js",[],"/Users/jesspeng/Documents/portfolio/src/App.js",["46","47"],"  import React from \"react\";\n  import { BrowserRouter as Router } from \"react-router-dom\";\n\n  import \"react-tiger-transition/styles/main.min.css\";\n  import 'react-slideshow-image/dist/styles.css'\n  import \"./index.css\";\n\n  import { Navigation, Route, Screen, Link, glide } from \"react-tiger-transition\";\n  import Home from './components/Home'; \n  import Portfolio from './components/Portfolio'; \n  import About from './components/About'; \n  import Title from './components/Title'; \n\n  import Back from './assets/previous.svg';\n  import GraphicDesign from \"./components/GraphicDesign\";\n\n  // inject glide styles\n  glide({\n    name: 'glide-left'\n  });\n  glide({\n    name: 'glide-right',\n    direction: 'right'\n  });\n\n  const screenStyle = {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#FFFAFF\"\n    // overflow: \"visible\"\n  };\n\n  document.getElementById(\"root\").style.height = \"100vh\";\n\n  export default () => (\n    <Router>\n      <Navigation>\n        <Route exact path=\"/\">\n          <Screen\n            style={{\n              ...screenStyle\n            }}\n          >\n            <Home></Home>\n            <div className=\"container home\">\n              <div className=\"row title\">\n                <Title></Title>\n              </div>\n              <div className=\"row home-btns\">\n                <Link to=\"/about\" transition='glide-right'className=\"home-btn\">About</Link>\n                <Link to=\"/portfolio\" transition='glide-left' className=\"home-btn\">Portfolio</Link>\n              </div>\n            </div>\n          </Screen>\n        </Route>\n        <Route\n          exact\n          path=\"/portfolio\"\n          screen // shorthand to wrap children with screen\n          screenProps={{\n            style: {\n              ...screenStyle\n            }\n          }}\n        >\n          <Portfolio></Portfolio>\n          <div className=\"nav portfolio\">\n            <Link to=\"/\" transition='glide-right'><img className=\"nav-btn back-portfolio\" src={Back} alt=\"\"/></Link>\n          </div>\n        </Route>\n        <Route\n          exact\n          path=\"/about\"\n          screen \n          screenProps={{\n            style: {\n              ...screenStyle\n            }\n          }}\n        >\n          <About></About>\n          <div className=\"nav about\">\n            <Link to=\"/\" transition='glide-left'><img className=\"nav-btn back-about\" src={Back} alt=\"\"/></Link>\n          </div>\n          \n        </Route>\n      </Navigation>\n    </Router>\n  );\n","/Users/jesspeng/Documents/portfolio/src/components/Portfolio.js",["48","49","50","51"],"import React, { Component, useState } from 'react';\nimport Projects from '../data/project.json'; \nimport Footer from './Footer';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport { Carousel } from 'react-responsive-carousel';\nimport Back from \"../assets/previous.svg\";\nimport GraphicDesign from \"./GraphicDesign\";\nimport UXDesign from \"./UXDesign\";\n// import {ActionButton, Flex, Link,} from \"@adobe/react-spectrum\";\n\nconst Portfolio = () => {\n\n    const [selectedGraphicDesign, setSelectedGraphicDesign] = useState(false);\n\n    const ProjectData = Projects.map(\n        (project) => {\n            return (\n                <>\n                    <div className=\"row\">\n                        <h3 key={project.name}>{project.name}</h3><br></br>\n                        <Carousel>\n                            {project.images &&\n                                project.images.map(\n                                    (image) => {\n                                        return <>\n                                            <div>\n                                                <img key={image.url} src={image.url} alt={image.alt}/>\n                                            </div>\n                                        </>;\n                                    }\n                                )\n                            }\n                        </Carousel>\n                        <p key={project.description}>{project.description}</p>\n                        <p>{project.tools}<br></br><br></br>\n                            {project.links &&\n                                project.links.map(\n                                    (link) => {\n                                        return <><a href={link.src} key={link.src} target=\"_blank\"\n                                                    rel=\"noreferrer\">{link.name}</a><br></br></>;\n                                    }\n                                )\n                            }\n                        </p>\n                    </div>\n\n                    <br></br><br></br>\n                    <p>• • • • • • •</p>\n                    <br></br><br></br>\n                </>\n            )\n        }\n    )\n    return (\n        <div>\n            <div className=\"content-container portfolio\">\n                {/*<Flex direction=\"column\" alignItems=\"center\">*/}\n                {/*    <Flex id=\"portfolio-navbar\" direction=\"row\" gap=\"size-300\">*/}\n                {/*        <Link onPress={() => setSelectedGraphicDesign(false)}>UX Design</Link>*/}\n                {/*        <Link onPress={() => setSelectedGraphicDesign(true)}>Graphic Design</Link>*/}\n                {/*    </Flex>*/}\n                {/*</Flex>*/}\n\n                {selectedGraphicDesign ? <GraphicDesign/> : <UXDesign/>}\n                <Footer></Footer>\n            </div>\n        </div>\n    )\n\n}\n\nexport default Portfolio; \n","/Users/jesspeng/Documents/portfolio/src/components/About.js",[],"/Users/jesspeng/Documents/portfolio/src/components/Home.js",["52","53"],"import React, {Component} from \"react\";\nimport body from '../assets/body.png'; \nimport mouth from '../assets/mouth.png'; \n\nclass Home extends Component {\n  \n  constructor(props){\n      super(props);\n\n      // on page load \n      this.state = {\n          droidX: 0,\n          mouseX: 0,\n          toTheRight: true, \n          speed: 1, \n          accelMod: 2\n      }\n  }\n\n  // Keep track of the mouse position.\n  handleMouseMove(event) {\n      this.setState({\n          mouseX: event.pageX\n      })\n  }\n\n  movement() {\n      let {droidX, mouseX, speed, accelMod} = this.state;\n\n      if(Math.abs(Math.round(droidX)-mouseX) !== 1){\n        \n          let distance = mouseX - droidX;\n          let acceleration = Math.abs(distance * accelMod) / 100;\n\n          // Move to the right\n          if (droidX < mouseX) {\n              this.setState({\n                  droidX: droidX+(speed*acceleration),\n                  toTheRight: true\n              });\n          }\n        \n          // Move to the left\n          else {\n              this.setState({\n                  droidX: droidX-(speed*acceleration),\n                  toTheRight: false\n              });\n          }\n      }\n  }\n\n  // Get some initial movement on first mount. \n  componentWillMount() {\n      this.setState({\n          mouseX: 300\n      });\n  }\n\n  // Set up the mouse event listener and fire up the movement function.\n  componentDidMount() {\n      document.addEventListener('mousemove', (e) => this.handleMouseMove(e));\n      setInterval(this.movement.bind(this), 1);\n  }\n\n  // Clean up.\n  componentWillUnmount() {\n      document.removeEventListener('mousemove', (e) => this.handleMouseMove(e));\n  }\n  render() {\n    let { speed, accelMod, droidX, mouseX, toTheRight} = this.state;\n    \n    return (\n      <div>     \n        <div className=\"liljess\" style={{WebkitTransform: `translateX(${droidX}px)`}}>     \n          <div className=\"body\" \n               style={{WebkitTransform: `translateX(${(mouseX - droidX) / 15}px) rotateZ(${(mouseX - droidX) / 20}deg)`}}>\n              <img className=\"img-body\" src={body} alt=\"\"></img>\n\n              <div className={'eyes ' + (toTheRight ? 'right' : '')}>\n                <div className=\"eye one\"></div>\n                <div className=\"eye two\"></div>\n                <div className=\"mouth\">\n                  <img className=\"img-mouth\" src={mouth} alt=\"\"></img>\n                </div>\n              </div>\n\n              <div className={'pupils ' + (toTheRight ? 'right' : '')}>\n                <div className=\"pupil one\"></div>\n                <div className=\"pupil two\"></div>\n              </div>\n\n              <div className={'eyebrows ' + (toTheRight ? 'right' : '')}>\n                <div className=\"eyebrow one\"></div>\n                <div className=\"eyebrow two\"></div>\n              </div>\n          </div>\n\n          <div className=\"scooter\">\n            <div className=\"scooter base\"></div>\n            <div className=\"scooter top\" style={{WebkitTransform: `translateX(${(mouseX - droidX) / 15}px) rotateZ(${(mouseX - droidX) / 25}deg)`}}></div>\n            <div className=\"scooter handle\" style={{WebkitTransform: `translateX(${(mouseX - droidX) / 10}px) rotateZ(${(mouseX - droidX) / 15}deg)`}}></div>\n          </div>\n          <div className=\"ball-left\" style={{WebkitTransform: `rotateZ(${droidX}deg)`}}>\n            <div className=\"ring one\"></div>\n          </div>\n          <div className=\"ball-right\" style={{WebkitTransform: `rotateZ(${droidX}deg)`}}>\n            <div className=\"ring one\"></div>\n          </div>\n          <div className=\"shadow\"></div>\n        </div>\n        \n        <div className=\"instructions\">\n          <p>move your mouse.</p>\n        </div>\n\n      </div>\n    )\n  }\n}\n\nexport default Home;","/Users/jesspeng/Documents/portfolio/src/components/GraphicDesign.js",[],"/Users/jesspeng/Documents/portfolio/src/components/Title.js",[],"/Users/jesspeng/Documents/portfolio/src/components/Contact.js",[],"/Users/jesspeng/Documents/portfolio/src/components/UXDesign.js",["54","55"],"import React, { Component } from 'react';\nimport Contact from './Contact';\n\nimport Footer from './Footer';\n// import {Flex} from \"@adobe/react-spectrum\";\n\nclass UXDesign extends Component {\n    render() {\n        return (\n            <div>\n                <div className=\"content-container portfolio\">\n                    <h4 key=\"AEP-Copy-App\">Adobe Experience Platform<br/>Artifact Copy App</h4><br></br>\n                    <img id=\"full-width\" key=\"overview\" src=\"/project_images/AEPArtifactCopyApp/overview.png\" alt=\"overview\"/><br/><br/>\n                    <div className=\"row\">\n                        <h5>Background</h5><br/>\n                        <p>Adobe Experience Platform allows customers to store, manage, and monitor configurations of\n                            data or <b>artifacts</b> in sandboxes. Transferring complex artifacts can be\n                            time-consuming and error prone for multi-sandbox environments. <u>My team's primary objective was to\n                            design and build an app that enables users to easily copy Adobe Experience Platform (AEP)\n                                and Adobe Journey Optimizer (AJO) artifacts between sandboxes for seamless deployments.</u><br/><br/>\n                            <b>My role was Lead Front End Developer in a team of five.</b><br/><br/>\n                            Technologies: React Spectrum, App Builder (UI template), and SPA Pipeline\n                            for deployment to Unified Shell.<br/><br/>\n                        </p><br/>\n                        <h5>Requirements</h5><br/>\n                        <img id=\"full-width\" key=\"milestones\" src=\"/project_images/AEPArtifactCopyApp/milestones.png\" alt=\"milestones\"/><br/><br/><br/>\n                        <p>The app needed to accomplish the following:</p><br/>\n                        {/*<Flex direction=\"row\">*/}\n                        {/*    <Flex direction=\"column\" width=\"50%\">*/}\n                        {/*        <p id=\"list\">*/}\n                        {/*            • Copy all foundation artifacts (schemas, datasets, segments, sources, destinations) and*/}\n                        {/*            first level dependencies<br/>*/}\n                        {/*            • Review dependencies before initiating copy<br/>*/}\n                        {/*        </p>*/}\n                        {/*    </Flex>*/}\n                        {/*    <Flex direction=\"column\" width=\"50%\">*/}\n                        {/*        <p id=\"list\">*/}\n                        {/*            • Sync artifacts between the source and destination sandboxes<br/>*/}\n                        {/*            • Revert artifacts (once) after syncing<br/>*/}\n                        {/*            • Log actions for documentation and troubleshooting*/}\n                        {/*        </p>*/}\n                        {/*    </Flex>*/}\n                        {/*</Flex>*/}\n                        <h5>Initial Design</h5><br/>\n                        {/*<Flex direction=\"row\">*/}\n                        {/*    <Flex direction=\"column\">*/}\n                        {/*        <img id=\"half-width\" key=\"sketch1\" src=\"/project_images/AEPArtifactCopyApp/sketch1.jpg\" alt=\"sketch\"/><br/><br/><br/>*/}\n                        {/*    </Flex>*/}\n                        {/*    /!*<Flex direction=\"column\">*!/*/}\n                        {/*    /!*    <img id=\"half-width\" key=\"sketch2\" src=\"/project_images/AEPArtifactCopyApp/sketch2.jpg\" alt=\"sketch\"/><br/><br/><br/>*!/*/}\n                        {/*    /!*</Flex>*!/*/}\n                        {/*    <Flex direction=\"column\">*/}\n                        {/*        <img id=\"half-width\" key=\"sketch3\" src=\"/project_images/AEPArtifactCopyApp/sketch3.jpg\" alt=\"sketch\"/><br/><br/><br/>*/}\n                        {/*    </Flex>*/}\n                        {/*</Flex>*/}\n                        <p>The first design consisted of two pages: the copy page and confirmation page.<br/>\n                            On the copy page, the user can select the source and destination sandbox and artifacts to\n                            display from the left panel. All artifacts are listed on the right.</p><br/>\n                        <img id=\"full-width\" key=\"initial\" src=\"/project_images/AEPArtifactCopyApp/initial-design.png\" alt=\"initial\"/><br/><br/><br/>\n                        <img id=\"full-width\" key=\"dep\" src=\"/project_images/AEPArtifactCopyApp/dependency.png\" alt=\"dep\"/><br/><br/><br/>\n                        <p>When the user selects an\n                            artifact, the dependency graph updates below. Once the user confirms all artifacts to be\n                            copied, an audit log shows the progress of backend calls in real time.<br/>\n                            The user is then directed to the confirmation page, which lists all successes and failures\n                            and artifacts in the destination sandbox.</p><br/>\n                        <h5>Setbacks</h5><br/>\n                        <p>Our main issues were troubleshooting and scalability. Users who want to copy multiple\n                            artifacts cannot view all dependencies at once. Backend calls for artifact types often\n                            overlapped, so troubleshooting from the audit log was difficult. Additional features like\n                            syncing and reverting would also be tough to integrate in this UI.\n                        </p><br/>\n                        <h5>Redesign</h5><br/>\n                        <p>The primary focus of the redesign was to separate artifact types into their own copy workflows.<br/>\n                            <br/>I followed existing design patterns found throughout Experience Platform.</p><br/>\n                        {/*<Flex direction=\"row\">*/}\n                        {/*    <Flex direction=\"column\">*/}\n                        {/*        <img id=\"half-width\" key=\"aep\" src=\"/project_images/AEPArtifactCopyApp/sketch1.jpg\" alt=\"aep\"/><br/><br/><br/>*/}\n                        {/*    </Flex>*/}\n                        {/*    <Flex direction=\"column\">*/}\n                        {/*        <img id=\"half-width\" key=\"figma\" src=\"/project_images/AEPArtifactCopyApp/sketch3.jpg\" alt=\"figma\"/><br/><br/><br/>*/}\n                        {/*    </Flex>*/}\n                        {/*</Flex>*/}\n                            <a href=\"https://www.figma.com/proto/TIHIYPfyhvmQiSWxfzz5i1/Untitled?node-id=1-400&scaling=\n                            min-zoom&page-id=0%3A1&starting-point-node-id=1%3A137\">Link to redesign in Figma</a><br/><br/>\n                            <p>Instead of copying all artifact types at once, the user can now select an artifact from the\n                            left panel. The following steps then apply to all artifacts to copy:\n                            <ul>\n                                <li>Choose a source sandbox</li>\n                                <li>Select up to ten artifacts from the list</li>\n                                <li>Hit Copy. Instead of directly starting the copy process, a dialog window will appear\n                                    for the user to select the destination sandbox and verify dependencies.</li>\n                                <li>After the user hits Copy, the job status of each artifact and its dependencies will\n                                    update in real-time to indicate a success or otherwise.</li>\n                            </ul>\n                            Scalability<br/>\n                            For additional artifact types, we simply create a new tab that follows the template logic of\n                            the other tabs. The redesign also allowed us to easily integrate additional features such as\n                            sync, revert, and cross IMS organization copy.\n                        </p><br/>\n                        <h5>Conclusion</h5><br/>\n                        <p>From the audit log, we've tracked over 100 internal Adobe consultants and solution architects\n                            using our app to copy, sync, and revert artifacts. Through continuous iteration and\n                            improvement based on customer feedback, we were able to design and build an application that\n                            simplifies and streamlines sandbox management in Adobe Experience Platform.</p>\n                        <br></br><br></br>\n                    </div>\n                    <br></br><br></br>\n                    <p>• • • • • • •</p>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default UXDesign;\n","/Users/jesspeng/Documents/portfolio/src/components/Footer.js",[],{"ruleId":"56","severity":1,"message":"57","line":15,"column":10,"nodeType":"58","messageId":"59","endLine":15,"endColumn":23},{"ruleId":"60","severity":1,"message":"61","line":38,"column":3,"nodeType":"62","endLine":92,"endColumn":5},{"ruleId":"56","severity":1,"message":"63","line":1,"column":17,"nodeType":"58","messageId":"59","endLine":1,"endColumn":26},{"ruleId":"56","severity":1,"message":"64","line":6,"column":8,"nodeType":"58","messageId":"59","endLine":6,"endColumn":12},{"ruleId":"56","severity":1,"message":"65","line":13,"column":35,"nodeType":"58","messageId":"59","endLine":13,"endColumn":59},{"ruleId":"56","severity":1,"message":"66","line":15,"column":11,"nodeType":"58","messageId":"59","endLine":15,"endColumn":22},{"ruleId":"56","severity":1,"message":"67","line":71,"column":11,"nodeType":"58","messageId":"59","endLine":71,"endColumn":16},{"ruleId":"56","severity":1,"message":"68","line":71,"column":18,"nodeType":"58","messageId":"59","endLine":71,"endColumn":26},{"ruleId":"56","severity":1,"message":"69","line":2,"column":8,"nodeType":"58","messageId":"59","endLine":2,"endColumn":15},{"ruleId":"56","severity":1,"message":"70","line":4,"column":8,"nodeType":"58","messageId":"59","endLine":4,"endColumn":14},"no-unused-vars","'GraphicDesign' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Component' is defined but never used.","'Back' is defined but never used.","'setSelectedGraphicDesign' is assigned a value but never used.","'ProjectData' is assigned a value but never used.","'speed' is assigned a value but never used.","'accelMod' is assigned a value but never used.","'Contact' is defined but never used.","'Footer' is defined but never used."]